/*******************************************************************************
 *  This file is AUTOMATICALLY GENERATED by:
 *  ../tools/fortran_wrappers.pl --wrappers ../include/magma_s.h
 *  Do not edit.
 ******************************************************************************/

#include <stdint.h>  // for uintptr_t

#include "magma.h"

/*
 * typedef comming from fortran.h file provided in CUDADIR/src directory
 * it will probably change with future release of CUDA when they use 64 bit addresses
 */
typedef size_t devptr_t;

#ifdef PGI_FORTRAN
#define DEVPTR(ptr_) ((float*)(ptr_))
#else
#define DEVPTR(ptr_) ((float*)(uintptr_t)(*(ptr_)))
#endif

#ifndef MAGMA_FORTRAN_NAME
#if defined(ADD_)
#define MAGMA_FORTRAN_NAME(lcname, UCNAME)  magmaf_##lcname##_
#elif defined(NOCHANGE)
#define MAGMA_FORTRAN_NAME(lcname, UCNAME)  magmaf_##lcname
#elif defined(UPCASE)
#define MAGMA_FORTRAN_NAME(lcname, UCNAME)  MAGMAF_##UCNAME
#endif
#endif

#ifndef MAGMA_GPU_FORTRAN_NAME
#if defined(ADD_)
#define MAGMA_GPU_FORTRAN_NAME(lcname, UCNAME)  magmaf_##lcname##_gpu_
#elif defined(NOCHANGE)
#define MAGMA_GPU_FORTRAN_NAME(lcname, UCNAME)  magmaf_##lcname##_gpu
#elif defined(UPCASE)
#define MAGMA_GPU_FORTRAN_NAME(lcname, UCNAME)  MAGMAF_##UCNAME##_GPU
#endif
#endif

#define PRECISION_s

#ifdef __cplusplus
extern "C" {
#endif

/*
    -- MAGMA (version 1.4.0) --
       Univ. of Tennessee, Knoxville
       Univ. of California, Berkeley
       Univ. of Colorado, Denver
       August 2013

       @generated s Tue Aug 13 16:43:32 2013
*/




/* ////////////////////////////////////////////////////////////////////////////
   -- MAGMA Auxiliary functions to get the NB used
*/
#define magmaf_get_spotrf_nb MAGMA_FORTRAN_NAME( get_spotrf_nb, GET_SPOTRF_NB )
magma_int_t magmaf_get_spotrf_nb( magma_int_t *m )
{
    return magma_get_spotrf_nb( *m );
}

#define magmaf_get_sgetrf_nb MAGMA_FORTRAN_NAME( get_sgetrf_nb, GET_SGETRF_NB )
magma_int_t magmaf_get_sgetrf_nb( magma_int_t *m )
{
    return magma_get_sgetrf_nb( *m );
}

#define magmaf_get_sgetri_nb MAGMA_FORTRAN_NAME( get_sgetri_nb, GET_SGETRI_NB )
magma_int_t magmaf_get_sgetri_nb( magma_int_t *m )
{
    return magma_get_sgetri_nb( *m );
}

#define magmaf_get_sgeqp3_nb MAGMA_FORTRAN_NAME( get_sgeqp3_nb, GET_SGEQP3_NB )
magma_int_t magmaf_get_sgeqp3_nb( magma_int_t *m )
{
    return magma_get_sgeqp3_nb( *m );
}

#define magmaf_get_sgeqrf_nb MAGMA_FORTRAN_NAME( get_sgeqrf_nb, GET_SGEQRF_NB )
magma_int_t magmaf_get_sgeqrf_nb( magma_int_t *m )
{
    return magma_get_sgeqrf_nb( *m );
}

#define magmaf_get_sgeqlf_nb MAGMA_FORTRAN_NAME( get_sgeqlf_nb, GET_SGEQLF_NB )
magma_int_t magmaf_get_sgeqlf_nb( magma_int_t *m )
{
    return magma_get_sgeqlf_nb( *m );
}

#define magmaf_get_sgehrd_nb MAGMA_FORTRAN_NAME( get_sgehrd_nb, GET_SGEHRD_NB )
magma_int_t magmaf_get_sgehrd_nb( magma_int_t *m )
{
    return magma_get_sgehrd_nb( *m );
}

#define magmaf_get_ssytrd_nb MAGMA_FORTRAN_NAME( get_ssytrd_nb, GET_SSYTRD_NB )
magma_int_t magmaf_get_ssytrd_nb( magma_int_t *m )
{
    return magma_get_ssytrd_nb( *m );
}

#define magmaf_get_sgelqf_nb MAGMA_FORTRAN_NAME( get_sgelqf_nb, GET_SGELQF_NB )
magma_int_t magmaf_get_sgelqf_nb( magma_int_t *m )
{
    return magma_get_sgelqf_nb( *m );
}

#define magmaf_get_sgebrd_nb MAGMA_FORTRAN_NAME( get_sgebrd_nb, GET_SGEBRD_NB )
magma_int_t magmaf_get_sgebrd_nb( magma_int_t *m )
{
    return magma_get_sgebrd_nb( *m );
}

#define magmaf_get_ssygst_nb MAGMA_FORTRAN_NAME( get_ssygst_nb, GET_SSYGST_NB )
magma_int_t magmaf_get_ssygst_nb( magma_int_t *m )
{
    return magma_get_ssygst_nb( *m );
}

#define magmaf_get_sgesvd_nb MAGMA_FORTRAN_NAME( get_sgesvd_nb, GET_SGESVD_NB )
magma_int_t magmaf_get_sgesvd_nb( magma_int_t *m )
{
    return magma_get_sgesvd_nb( *m );
}

/* ////////////////////////////////////////////////////////////////////////////
   -- MAGMA function definitions / Data on CPU
*/
#define magmaf_sgebrd MAGMA_FORTRAN_NAME( sgebrd, SGEBRD )
void magmaf_sgebrd(
    magma_int_t *m, magma_int_t *n,
    float *A, magma_int_t *lda,
    float *d,
    float *e,
    float *tauq,
    float *taup,
    float *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_sgebrd(
        *m, *n,
        A, *lda,
        d,
        e,
        tauq,
        taup,
        work, *lwork,
        info );
}

#define magmaf_sgehrd2 MAGMA_FORTRAN_NAME( sgehrd2, SGEHRD2 )
void magmaf_sgehrd2(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    float *A, magma_int_t *lda,
    float *tau,
    float *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_sgehrd2(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_sgehrd MAGMA_FORTRAN_NAME( sgehrd, SGEHRD )
void magmaf_sgehrd(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    float *A, magma_int_t *lda,
    float *tau,
    float *work, magma_int_t *lwork,
    devptr_t *dT,
    magma_int_t *info )
{
    magma_sgehrd(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        work, *lwork,
        DEVPTR(dT),
        info );
}

#define magmaf_sgelqf MAGMA_FORTRAN_NAME( sgelqf, SGELQF )
void magmaf_sgelqf(
    magma_int_t *m, magma_int_t *n,
    float *A, magma_int_t *lda,
    float *tau,
    float *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_sgelqf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_sgeqlf MAGMA_FORTRAN_NAME( sgeqlf, SGEQLF )
void magmaf_sgeqlf(
    magma_int_t *m, magma_int_t *n,
    float *A, magma_int_t *lda,
    float *tau,
    float *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_sgeqlf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_sgeqrf MAGMA_FORTRAN_NAME( sgeqrf, SGEQRF )
void magmaf_sgeqrf(
    magma_int_t *m, magma_int_t *n,
    float *A, magma_int_t *lda,
    float *tau,
    float *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_sgeqrf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_sgeqrf4 MAGMA_FORTRAN_NAME( sgeqrf4, SGEQRF4 )
void magmaf_sgeqrf4(
    magma_int_t *num_gpus, magma_int_t *m, magma_int_t *n,
    float *a, magma_int_t *lda,
    float *tau,
    float *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_sgeqrf4(
        *num_gpus, *m, *n,
        a, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_sgeqrf_ooc MAGMA_FORTRAN_NAME( sgeqrf_ooc, SGEQRF_OOC )
void magmaf_sgeqrf_ooc(
    magma_int_t *m, magma_int_t *n,
    float *A, magma_int_t *lda,
    float *tau,
    float *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_sgeqrf_ooc(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_sgesv MAGMA_FORTRAN_NAME( sgesv, SGESV )
void magmaf_sgesv(
    magma_int_t *n, magma_int_t *nrhs,
    float *A, magma_int_t *lda,
    magma_int_t *ipiv,
    float *B, magma_int_t *ldb,
    magma_int_t *info )
{
    magma_sgesv(
        *n, *nrhs,
        A, *lda,
        ipiv,
        B, *ldb,
        info );
}

#define magmaf_sgetrf MAGMA_FORTRAN_NAME( sgetrf, SGETRF )
void magmaf_sgetrf(
    magma_int_t *m, magma_int_t *n,
    float *A, magma_int_t *lda,
    magma_int_t *ipiv,
    magma_int_t *info )
{
    magma_sgetrf(
        *m, *n,
        A, *lda,
        ipiv,
        info );
}

#define magmaf_sposv MAGMA_FORTRAN_NAME( sposv, SPOSV )
void magmaf_sposv(
    char *uplo, magma_int_t *n, magma_int_t *nrhs,
    float *A, magma_int_t *lda,
    float *B, magma_int_t *ldb,
    magma_int_t *info )
{
    magma_sposv(
        *uplo, *n, *nrhs,
        A, *lda,
        B, *ldb,
        info );
}

#define magmaf_spotrf MAGMA_FORTRAN_NAME( spotrf, SPOTRF )
void magmaf_spotrf(
    char *uplo, magma_int_t *n,
    float *A, magma_int_t *lda,
    magma_int_t *info )
{
    magma_spotrf(
        *uplo, *n,
        A, *lda,
        info );
}

#define magmaf_spotri MAGMA_FORTRAN_NAME( spotri, SPOTRI )
void magmaf_spotri(
    char *uplo, magma_int_t *n,
    float *A, magma_int_t *lda,
    magma_int_t *info )
{
    magma_spotri(
        *uplo, *n,
        A, *lda,
        info );
}

#define magmaf_slauum MAGMA_FORTRAN_NAME( slauum, SLAUUM )
void magmaf_slauum(
    char *uplo, magma_int_t *n,
    float *A, magma_int_t *lda,
    magma_int_t *info )
{
    magma_slauum(
        *uplo, *n,
        A, *lda,
        info );
}

#define magmaf_strtri MAGMA_FORTRAN_NAME( strtri, STRTRI )
void magmaf_strtri(
    char *uplo, char *diag, magma_int_t *n,
    float *A, magma_int_t *lda,
    magma_int_t *info )
{
    magma_strtri(
        *uplo, *diag, *n,
        A, *lda,
        info );
}

#define magmaf_ssytrd MAGMA_FORTRAN_NAME( ssytrd, SSYTRD )
void magmaf_ssytrd(
    char *uplo, magma_int_t *n,
    float *A, magma_int_t *lda,
    float *d,
    float *e,
    float *tau,
    float *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_ssytrd(
        *uplo, *n,
        A, *lda,
        d,
        e,
        tau,
        work, *lwork,
        info );
}

#define magmaf_sorgqr MAGMA_FORTRAN_NAME( sorgqr, SORGQR )
void magmaf_sorgqr(
    magma_int_t *m, magma_int_t *n, magma_int_t *k,
    float *a, magma_int_t *lda,
    float *tau,
    devptr_t *dT, magma_int_t *nb,
    magma_int_t *info )
{
    magma_sorgqr(
        *m, *n, *k,
        a, *lda,
        tau,
        DEVPTR(dT), *nb,
        info );
}

#define magmaf_sormql MAGMA_FORTRAN_NAME( sormql, SORMQL )
void magmaf_sormql(
    char *side, char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    float *a, magma_int_t *lda,
    float *tau,
    float *c, magma_int_t *ldc,
    float *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_sormql(
        *side, *trans, *m, *n, *k,
        a, *lda,
        tau,
        c, *ldc,
        work, *lwork,
        info );
}

#define magmaf_sormqr MAGMA_FORTRAN_NAME( sormqr, SORMQR )
void magmaf_sormqr(
    char *side, char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    float *a, magma_int_t *lda,
    float *tau,
    float *c, magma_int_t *ldc,
    float *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_sormqr(
        *side, *trans, *m, *n, *k,
        a, *lda,
        tau,
        c, *ldc,
        work, *lwork,
        info );
}

#define magmaf_sormtr MAGMA_FORTRAN_NAME( sormtr, SORMTR )
void magmaf_sormtr(
    char *side, char *uplo, char *trans, magma_int_t *m, magma_int_t *n,
    float *a, magma_int_t *lda,
    float *tau,
    float *c, magma_int_t *ldc,
    float *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_sormtr(
        *side, *uplo, *trans, *m, *n,
        a, *lda,
        tau,
        c, *ldc,
        work, *lwork,
        info );
}

#define magmaf_sorghr MAGMA_FORTRAN_NAME( sorghr, SORGHR )
void magmaf_sorghr(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    float *a, magma_int_t *lda,
    float *tau,
    devptr_t *dT, magma_int_t *nb,
    magma_int_t *info )
{
    magma_sorghr(
        *n, *ilo, *ihi,
        a, *lda,
        tau,
        DEVPTR(dT), *nb,
        info );
}

#if defined(PRECISION_z) || defined(PRECISION_c)

#define magmaf_sgeev MAGMA_FORTRAN_NAME( sgeev, SGEEV )
void magmaf_sgeev(
    char *jobvl, char *jobvr, magma_int_t *n,
    float *a, magma_int_t *lda,
    float *w,
    float *vl, magma_int_t *ldvl,
    float *vr, magma_int_t *ldvr,
    float *work, magma_int_t *lwork,
    float *rwork,
    magma_int_t *info )
{
    magma_sgeev(
        *jobvl, *jobvr, *n,
        a, *lda,
        w,
        vl, *ldvl,
        vr, *ldvr,
        work, *lwork,
        rwork,
        info );
}

#define magmaf_sgeqp3 MAGMA_FORTRAN_NAME( sgeqp3, SGEQP3 )
void magmaf_sgeqp3(
    magma_int_t *m, magma_int_t *n,
    float *a, magma_int_t *lda,
    magma_int_t *jpvt,
    float *tau,
    float *work, magma_int_t *lwork,
    float *rwork,
    magma_int_t *info )
{
    magma_sgeqp3(
        *m, *n,
        a, *lda,
        jpvt,
        tau,
        work, *lwork,
        rwork,
        info );
}

#define magmaf_sgesvd MAGMA_FORTRAN_NAME( sgesvd, SGESVD )
void magmaf_sgesvd(
    char *jobu, char *jobvt, magma_int_t *m, magma_int_t *n,
    float *a, magma_int_t *lda,
    float *s,
    float *u, magma_int_t *ldu,
    float *vt, magma_int_t *ldvt,
    float *work, magma_int_t *lwork,
    float *rwork,
    magma_int_t *info )
{
    magma_sgesvd(
        *jobu, *jobvt, *m, *n,
        a, *lda,
        s,
        u, *ldu,
        vt, *ldvt,
        work, *lwork,
        rwork,
        info );
}

#define magmaf_ssyevd MAGMA_FORTRAN_NAME( ssyevd, SSYEVD )
void magmaf_ssyevd(
    char *jobz, char *uplo, magma_int_t *n,
    float *a, magma_int_t *lda,
    float *w,
    float *work, magma_int_t *lwork,
    float *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_ssyevd(
        *jobz, *uplo, *n,
        a, *lda,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_ssyevdx MAGMA_FORTRAN_NAME( ssyevdx, SSYEVDX )
void magmaf_ssyevdx(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    float *a, magma_int_t *lda, float *vl, float *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    float *w,
    float *work, magma_int_t *lwork,
    float *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_ssyevdx(
        *jobz, *range, *uplo, *n,
        a, *lda, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_ssyevx MAGMA_FORTRAN_NAME( ssyevx, SSYEVX )
void magmaf_ssyevx(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    float *a, magma_int_t *lda, float *vl, float *vu, magma_int_t *il, magma_int_t *iu, float *abstol,
    magma_int_t *m,
    float *w,
    float *z, magma_int_t *ldz,
    float *work, magma_int_t *lwork,
    float *rwork,
    magma_int_t *iwork,
    magma_int_t *ifail,
    magma_int_t *info )
{
    magma_ssyevx(
        *jobz, *range, *uplo, *n,
        a, *lda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        z, *ldz,
        work, *lwork,
        rwork,
        iwork,
        ifail,
        info );
}

#define magmaf_ssyevr MAGMA_FORTRAN_NAME( ssyevr, SSYEVR )
void magmaf_ssyevr(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    float *a, magma_int_t *lda, float *vl, float *vu, magma_int_t *il, magma_int_t *iu, float *abstol,
    magma_int_t *m,
    float *w,
    float *z, magma_int_t *ldz,
    magma_int_t *isuppz,
    float *work, magma_int_t *lwork,
    float *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_ssyevr(
        *jobz, *range, *uplo, *n,
        a, *lda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        z, *ldz,
        isuppz,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_ssygvd MAGMA_FORTRAN_NAME( ssygvd, SSYGVD )
void magmaf_ssygvd(
    magma_int_t *itype, char *jobz, char *uplo, magma_int_t *n,
    float *a, magma_int_t *lda,
    float *b, magma_int_t *ldb,
    float *w,
    float *work, magma_int_t *lwork,
    float *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_ssygvd(
        *itype, *jobz, *uplo, *n,
        a, *lda,
        b, *ldb,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_ssygvdx MAGMA_FORTRAN_NAME( ssygvdx, SSYGVDX )
void magmaf_ssygvdx(
    magma_int_t *itype, char *jobz, char *range, char *uplo, magma_int_t *n,
    float *a, magma_int_t *lda,
    float *b, magma_int_t *ldb, float *vl, float *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    float *w,
    float *work, magma_int_t *lwork,
    float *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_ssygvdx(
        *itype, *jobz, *range, *uplo, *n,
        a, *lda,
        b, *ldb, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_ssygvx MAGMA_FORTRAN_NAME( ssygvx, SSYGVX )
void magmaf_ssygvx(
    magma_int_t *itype, char *jobz, char *range, char *uplo, magma_int_t *n,
    float *a, magma_int_t *lda,
    float *b, magma_int_t *ldb, float *vl, float *vu, magma_int_t *il, magma_int_t *iu, float *abstol,
    magma_int_t *m,
    float *w,
    float *z, magma_int_t *ldz,
    float *work, magma_int_t *lwork,
    float *rwork,
    magma_int_t *iwork,
    magma_int_t *ifail,
    magma_int_t *info )
{
    magma_ssygvx(
        *itype, *jobz, *range, *uplo, *n,
        a, *lda,
        b, *ldb, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        z, *ldz,
        work, *lwork,
        rwork,
        iwork,
        ifail,
        info );
}

#define magmaf_ssygvr MAGMA_FORTRAN_NAME( ssygvr, SSYGVR )
void magmaf_ssygvr(
    magma_int_t *itype, char *jobz, char *range, char *uplo, magma_int_t *n,
    float *a, magma_int_t *lda,
    float *b, magma_int_t *ldb, float *vl, float *vu, magma_int_t *il, magma_int_t *iu, float *abstol,
    magma_int_t *m,
    float *w,
    float *z, magma_int_t *ldz,
    magma_int_t *isuppz,
    float *work, magma_int_t *lwork,
    float *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_ssygvr(
        *itype, *jobz, *range, *uplo, *n,
        a, *lda,
        b, *ldb, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        z, *ldz,
        isuppz,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_sstedx MAGMA_FORTRAN_NAME( sstedx, SSTEDX )
void magmaf_sstedx(
    char *range, magma_int_t *n, float *vl, float *vu, magma_int_t *il, magma_int_t *iu,
    float *D,
    float *E,
    float *Z, magma_int_t *ldz,
    float *rwork, magma_int_t *ldrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    float *dwork,
    magma_int_t *info )
{
    magma_sstedx(
        *range, *n, *vl, *vu, *il, *iu,
        D,
        E,
        Z, *ldz,
        rwork, *ldrwork,
        iwork, *liwork,
        dwork,
        info );
}

#else /* not (defined(PRECISION_z) || defined(PRECISION_c)) */

#define magmaf_sgeev MAGMA_FORTRAN_NAME( sgeev, SGEEV )
void magmaf_sgeev(
    char *jobvl, char *jobvr, magma_int_t *n,
    float *a, magma_int_t *lda,
    float *wr,
    float *wi,
    float *vl, magma_int_t *ldvl,
    float *vr, magma_int_t *ldvr,
    float *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_sgeev(
        *jobvl, *jobvr, *n,
        a, *lda,
        wr,
        wi,
        vl, *ldvl,
        vr, *ldvr,
        work, *lwork,
        info );
}

#define magmaf_sgeqp3 MAGMA_FORTRAN_NAME( sgeqp3, SGEQP3 )
void magmaf_sgeqp3(
    magma_int_t *m, magma_int_t *n,
    float *a, magma_int_t *lda,
    magma_int_t *jpvt,
    float *tau,
    float *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_sgeqp3(
        *m, *n,
        a, *lda,
        jpvt,
        tau,
        work, *lwork,
        info );
}

#define magmaf_sgesvd MAGMA_FORTRAN_NAME( sgesvd, SGESVD )
void magmaf_sgesvd(
    char *jobu, char *jobvt, magma_int_t *m, magma_int_t *n,
    float *a, magma_int_t *lda,
    float *s,
    float *u, magma_int_t *ldu,
    float *vt, magma_int_t *ldvt,
    float *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_sgesvd(
        *jobu, *jobvt, *m, *n,
        a, *lda,
        s,
        u, *ldu,
        vt, *ldvt,
        work, *lwork,
        info );
}

#define magmaf_ssyevd MAGMA_FORTRAN_NAME( ssyevd, SSYEVD )
void magmaf_ssyevd(
    char *jobz, char *uplo, magma_int_t *n,
    float *a, magma_int_t *lda,
    float *w,
    float *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_ssyevd(
        *jobz, *uplo, *n,
        a, *lda,
        w,
        work, *lwork,
        iwork, *liwork,
        info );
}

#define magmaf_ssyevdx MAGMA_FORTRAN_NAME( ssyevdx, SSYEVDX )
void magmaf_ssyevdx(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    float *a, magma_int_t *lda, float *vl, float *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    float *w,
    float *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_ssyevdx(
        *jobz, *range, *uplo, *n,
        a, *lda, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        iwork, *liwork,
        info );
}

#define magmaf_ssygvd MAGMA_FORTRAN_NAME( ssygvd, SSYGVD )
void magmaf_ssygvd(
    magma_int_t *itype, char *jobz, char *uplo, magma_int_t *n,
    float *a, magma_int_t *lda,
    float *b, magma_int_t *ldb,
    float *w,
    float *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_ssygvd(
        *itype, *jobz, *uplo, *n,
        a, *lda,
        b, *ldb,
        w,
        work, *lwork,
        iwork, *liwork,
        info );
}

#define magmaf_ssygvdx MAGMA_FORTRAN_NAME( ssygvdx, SSYGVDX )
void magmaf_ssygvdx(
    magma_int_t *itype, char *jobz, char *range, char *uplo, magma_int_t *n,
    float *a, magma_int_t *lda,
    float *b, magma_int_t *ldb, float *vl, float *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    float *w,
    float *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_ssygvdx(
        *itype, *jobz, *range, *uplo, *n,
        a, *lda,
        b, *ldb, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        iwork, *liwork,
        info );
}

#define magmaf_sstedx MAGMA_FORTRAN_NAME( sstedx, SSTEDX )
void magmaf_sstedx(
    char *range, magma_int_t *n, float *vl, float *vu, magma_int_t *il, magma_int_t *iu,
    float *d,
    float *e,
    float *z, magma_int_t *ldz,
    float *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    float *dwork,
    magma_int_t *info )
{
    magma_sstedx(
        *range, *n, *vl, *vu, *il, *iu,
        d,
        e,
        z, *ldz,
        work, *lwork,
        iwork, *liwork,
        dwork,
        info );
}

#endif /* not (defined(PRECISION_z) || defined(PRECISION_c)) */

#define magmaf_ssygst MAGMA_FORTRAN_NAME( ssygst, SSYGST )
void magmaf_ssygst(
    magma_int_t *itype, char *uplo, magma_int_t *n,
    float *a, magma_int_t *lda,
    float *b, magma_int_t *ldb,
    magma_int_t *info )
{
    magma_ssygst(
        *itype, *uplo, *n,
        a, *lda,
        b, *ldb,
        info );
}

/* ////////////////////////////////////////////////////////////////////////////
 -- MAGMA function definitions / Data on CPU / Multi-GPU
*/
#if defined(PRECISION_z) || defined(PRECISION_c)
#define magmaf_sgeev_m MAGMA_FORTRAN_NAME( sgeev_m, SGEEV_M )
void magmaf_sgeev_m(
    char *jobvl, char *jobvr, magma_int_t *n,
    float *A, magma_int_t *lda,
    float *W,
    float *vl, magma_int_t *ldvl,
    float *vr, magma_int_t *ldvr,
    float *work, magma_int_t *lwork,
    float *rwork,
    magma_int_t *info )
{
    magma_sgeev_m(
        *jobvl, *jobvr, *n,
        A, *lda,
        W,
        vl, *ldvl,
        vr, *ldvr,
        work, *lwork,
        rwork,
        info );
}

#else
#define magmaf_sgeev_m MAGMA_FORTRAN_NAME( sgeev_m, SGEEV_M )
void magmaf_sgeev_m(
    char *jobvl, char *jobvr, magma_int_t *n,
    float *A, magma_int_t *lda,
    float *WR,
    float *WI,
    float *vl, magma_int_t *ldvl,
    float *vr, magma_int_t *ldvr,
    float *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_sgeev_m(
        *jobvl, *jobvr, *n,
        A, *lda,
        WR,
        WI,
        vl, *ldvl,
        vr, *ldvr,
        work, *lwork,
        info );
}

#endif

#define magmaf_sgehrd_m MAGMA_FORTRAN_NAME( sgehrd_m, SGEHRD_M )
void magmaf_sgehrd_m(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    float *A, magma_int_t *lda,
    float *tau,
    float *work, magma_int_t *lwork,
    float *T,
    magma_int_t *info )
{
    magma_sgehrd_m(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        work, *lwork,
        T,
        info );
}

#define magmaf_sorghr_m MAGMA_FORTRAN_NAME( sorghr_m, SORGHR_M )
void magmaf_sorghr_m(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    float *A, magma_int_t *lda,
    float *tau,
    float *T, magma_int_t *nb,
    magma_int_t *info )
{
    magma_sorghr_m(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        T, *nb,
        info );
}

#define magmaf_sorgqr_m MAGMA_FORTRAN_NAME( sorgqr_m, SORGQR_M )
void magmaf_sorgqr_m(
    magma_int_t *m, magma_int_t *n, magma_int_t *k,
    float *A, magma_int_t *lda,
    float *tau,
    float *T, magma_int_t *nb,
    magma_int_t *info )
{
    magma_sorgqr_m(
        *m, *n, *k,
        A, *lda,
        tau,
        T, *nb,
        info );
}

/* ////////////////////////////////////////////////////////////////////////////
 -- MAGMA function definitions / Data on GPU
*/
#define magmaf_sgels_gpu MAGMA_GPU_FORTRAN_NAME( sgels, SGELS )
void magmaf_sgels_gpu(
    char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    devptr_t *dB, magma_int_t *lddb,
    float *hwork, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_sgels_gpu(
        *trans, *m, *n, *nrhs,
        DEVPTR(dA), *ldda,
        DEVPTR(dB), *lddb,
        hwork, *lwork,
        info );
}

#define magmaf_sgels3_gpu MAGMA_GPU_FORTRAN_NAME( sgels3, SGELS3 )
void magmaf_sgels3_gpu(
    char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    devptr_t *dB, magma_int_t *lddb,
    float *hwork, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_sgels3_gpu(
        *trans, *m, *n, *nrhs,
        DEVPTR(dA), *ldda,
        DEVPTR(dB), *lddb,
        hwork, *lwork,
        info );
}

#define magmaf_sgelqf_gpu MAGMA_GPU_FORTRAN_NAME( sgelqf, SGELQF )
void magmaf_sgelqf_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    float *tau,
    float *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_sgelqf_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_sgeqrf_gpu MAGMA_GPU_FORTRAN_NAME( sgeqrf, SGEQRF )
void magmaf_sgeqrf_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    float *tau,
    devptr_t *dT,
    magma_int_t *info )
{
    magma_sgeqrf_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        tau,
        DEVPTR(dT),
        info );
}

#define magmaf_sgeqrf2_gpu MAGMA_GPU_FORTRAN_NAME( sgeqrf2, SGEQRF2 )
void magmaf_sgeqrf2_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    float *tau,
    magma_int_t *info )
{
    magma_sgeqrf2_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        tau,
        info );
}

#define magmaf_sgeqrf3_gpu MAGMA_GPU_FORTRAN_NAME( sgeqrf3, SGEQRF3 )
void magmaf_sgeqrf3_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    float *tau,
    devptr_t *dT,
    magma_int_t *info )
{
    magma_sgeqrf3_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        tau,
        DEVPTR(dT),
        info );
}

#define magmaf_sgeqrs_gpu MAGMA_GPU_FORTRAN_NAME( sgeqrs, SGEQRS )
void magmaf_sgeqrs_gpu(
    magma_int_t *m, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    float *tau,
    devptr_t *dT,
    devptr_t *dB, magma_int_t *lddb,
    float *hwork, magma_int_t *lhwork,
    magma_int_t *info )
{
    magma_sgeqrs_gpu(
        *m, *n, *nrhs,
        DEVPTR(dA), *ldda,
        tau,
        DEVPTR(dT),
        DEVPTR(dB), *lddb,
        hwork, *lhwork,
        info );
}

#define magmaf_sgeqrs3_gpu MAGMA_GPU_FORTRAN_NAME( sgeqrs3, SGEQRS3 )
void magmaf_sgeqrs3_gpu(
    magma_int_t *m, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    float *tau,
    devptr_t *dT,
    devptr_t *dB, magma_int_t *lddb,
    float *hwork, magma_int_t *lhwork,
    magma_int_t *info )
{
    magma_sgeqrs3_gpu(
        *m, *n, *nrhs,
        DEVPTR(dA), *ldda,
        tau,
        DEVPTR(dT),
        DEVPTR(dB), *lddb,
        hwork, *lhwork,
        info );
}

#define magmaf_sgessm_gpu MAGMA_GPU_FORTRAN_NAME( sgessm, SGESSM )
void magmaf_sgessm_gpu(
    char *storev, magma_int_t *m, magma_int_t *n, magma_int_t *k, magma_int_t *ib,
    magma_int_t *ipiv,
    devptr_t *dL1, magma_int_t *lddl1,
    devptr_t *dL, magma_int_t *lddl,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_sgessm_gpu(
        *storev, *m, *n, *k, *ib,
        ipiv,
        DEVPTR(dL1), *lddl1,
        DEVPTR(dL), *lddl,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_sgesv_gpu MAGMA_GPU_FORTRAN_NAME( sgesv, SGESV )
void magmaf_sgesv_gpu(
    magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *ipiv,
    devptr_t *dB, magma_int_t *lddb,
    magma_int_t *info )
{
    magma_sgesv_gpu(
        *n, *nrhs,
        DEVPTR(dA), *ldda,
        ipiv,
        DEVPTR(dB), *lddb,
        info );
}

#define magmaf_sgetrf_gpu MAGMA_GPU_FORTRAN_NAME( sgetrf, SGETRF )
void magmaf_sgetrf_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *ipiv,
    magma_int_t *info )
{
    magma_sgetrf_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        ipiv,
        info );
}

#define magmaf_sgetrf_nopiv_gpu MAGMA_GPU_FORTRAN_NAME( sgetrf_nopiv, SGETRF_NOPIV )
void magmaf_sgetrf_nopiv_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_sgetrf_nopiv_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_sgetri_gpu MAGMA_GPU_FORTRAN_NAME( sgetri, SGETRI )
void magmaf_sgetri_gpu(
    magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *ipiv,
    devptr_t *dwork, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_sgetri_gpu(
        *n,
        DEVPTR(dA), *ldda,
        ipiv,
        DEVPTR(dwork), *lwork,
        info );
}

#define magmaf_sgetrs_gpu MAGMA_GPU_FORTRAN_NAME( sgetrs, SGETRS )
void magmaf_sgetrs_gpu(
    char *trans, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *ipiv,
    devptr_t *dB, magma_int_t *lddb,
    magma_int_t *info )
{
    magma_sgetrs_gpu(
        *trans, *n, *nrhs,
        DEVPTR(dA), *ldda,
        ipiv,
        DEVPTR(dB), *lddb,
        info );
}

#define magmaf_slarfb_gpu MAGMA_GPU_FORTRAN_NAME( slarfb, SLARFB )
void magmaf_slarfb_gpu(
    char *side, char *trans, char *direct, char *storev, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    devptr_t *dv, magma_int_t *ldv,
    devptr_t *dt, magma_int_t *ldt,
    devptr_t *dc, magma_int_t *ldc,
    devptr_t *dwork, magma_int_t *ldwork )
{
    magma_slarfb_gpu(
        *side, *trans, *direct, *storev, *m, *n, *k,
        DEVPTR(dv), *ldv,
        DEVPTR(dt), *ldt,
        DEVPTR(dc), *ldc,
        DEVPTR(dwork), *ldwork );
}

#define magmaf_slarfb_gpu_gemm MAGMA_FORTRAN_NAME( slarfb_gpu_gemm, SLARFB_GPU_GEMM )
void magmaf_slarfb_gpu_gemm(
    char *side, char *trans, char *direct, char *storev, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    const float *dv, magma_int_t *ldv,
    const float *dt, magma_int_t *ldt,
    float *dc, magma_int_t *ldc,
    float *dwork, magma_int_t *ldwork,
    float *dworkvt, magma_int_t *ldworkvt )
{
    magma_slarfb_gpu_gemm(
        *side, *trans, *direct, *storev, *m, *n, *k,
        dv, *ldv,
        dt, *ldt,
        dc, *ldc,
        dwork, *ldwork,
        dworkvt, *ldworkvt );
}

#define magmaf_sposv_gpu MAGMA_GPU_FORTRAN_NAME( sposv, SPOSV )
void magmaf_sposv_gpu(
    char *uplo, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    devptr_t *dB, magma_int_t *lddb,
    magma_int_t *info )
{
    magma_sposv_gpu(
        *uplo, *n, *nrhs,
        DEVPTR(dA), *ldda,
        DEVPTR(dB), *lddb,
        info );
}

#define magmaf_spotrf_gpu MAGMA_GPU_FORTRAN_NAME( spotrf, SPOTRF )
void magmaf_spotrf_gpu(
    char *uplo, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_spotrf_gpu(
        *uplo, *n,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_spotri_gpu MAGMA_GPU_FORTRAN_NAME( spotri, SPOTRI )
void magmaf_spotri_gpu(
    char *uplo, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_spotri_gpu(
        *uplo, *n,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_slauum_gpu MAGMA_GPU_FORTRAN_NAME( slauum, SLAUUM )
void magmaf_slauum_gpu(
    char *uplo, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_slauum_gpu(
        *uplo, *n,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_strtri_gpu MAGMA_GPU_FORTRAN_NAME( strtri, STRTRI )
void magmaf_strtri_gpu(
    char *uplo, char *diag, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_strtri_gpu(
        *uplo, *diag, *n,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_ssytrd_gpu MAGMA_GPU_FORTRAN_NAME( ssytrd, SSYTRD )
void magmaf_ssytrd_gpu(
    char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    float *d,
    float *e,
    float *tau,
    float *wa, magma_int_t *ldwa,
    float *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_ssytrd_gpu(
        *uplo, *n,
        DEVPTR(da), *ldda,
        d,
        e,
        tau,
        wa, *ldwa,
        work, *lwork,
        info );
}

#define magmaf_ssytrd2_gpu MAGMA_GPU_FORTRAN_NAME( ssytrd2, SSYTRD2 )
void magmaf_ssytrd2_gpu(
    char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    float *d,
    float *e,
    float *tau,
    float *wa, magma_int_t *ldwa,
    float *work, magma_int_t *lwork,
    float *dwork, magma_int_t *ldwork,
    magma_int_t *info )
{
    magma_ssytrd2_gpu(
        *uplo, *n,
        DEVPTR(da), *ldda,
        d,
        e,
        tau,
        wa, *ldwa,
        work, *lwork,
        dwork, *ldwork,
        info );
}

#define magmaf_spotrs_gpu MAGMA_GPU_FORTRAN_NAME( spotrs, SPOTRS )
void magmaf_spotrs_gpu(
    char *uplo, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    devptr_t *dB, magma_int_t *lddb,
    magma_int_t *info )
{
    magma_spotrs_gpu(
        *uplo, *n, *nrhs,
        DEVPTR(dA), *ldda,
        DEVPTR(dB), *lddb,
        info );
}

#define magmaf_sssssm_gpu MAGMA_GPU_FORTRAN_NAME( sssssm, SSSSSM )
void magmaf_sssssm_gpu(
    char *storev, magma_int_t *m1, magma_int_t *n1, magma_int_t *m2, magma_int_t *n2, magma_int_t *k, magma_int_t *ib,
    devptr_t *dA1, magma_int_t *ldda1,
    devptr_t *dA2, magma_int_t *ldda2,
    devptr_t *dL1, magma_int_t *lddl1,
    devptr_t *dL2, magma_int_t *lddl2,
    magma_int_t *IPIV,
    magma_int_t *info )
{
    magma_sssssm_gpu(
        *storev, *m1, *n1, *m2, *n2, *k, *ib,
        DEVPTR(dA1), *ldda1,
        DEVPTR(dA2), *ldda2,
        DEVPTR(dL1), *lddl1,
        DEVPTR(dL2), *lddl2,
        IPIV,
        info );
}

#define magmaf_sorgqr_gpu MAGMA_GPU_FORTRAN_NAME( sorgqr, SORGQR )
void magmaf_sorgqr_gpu(
    magma_int_t *m, magma_int_t *n, magma_int_t *k,
    devptr_t *da, magma_int_t *ldda,
    float *tau,
    devptr_t *dwork, magma_int_t *nb,
    magma_int_t *info )
{
    magma_sorgqr_gpu(
        *m, *n, *k,
        DEVPTR(da), *ldda,
        tau,
        DEVPTR(dwork), *nb,
        info );
}

#define magmaf_sormql2_gpu MAGMA_GPU_FORTRAN_NAME( sormql2, SORMQL2 )
void magmaf_sormql2_gpu(
    char *side, char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    devptr_t *da, magma_int_t *ldda,
    float *tau,
    devptr_t *dc, magma_int_t *lddc,
    float *wa, magma_int_t *ldwa,
    magma_int_t *info )
{
    magma_sormql2_gpu(
        *side, *trans, *m, *n, *k,
        DEVPTR(da), *ldda,
        tau,
        DEVPTR(dc), *lddc,
        wa, *ldwa,
        info );
}

#define magmaf_sormqr_gpu MAGMA_GPU_FORTRAN_NAME( sormqr, SORMQR )
void magmaf_sormqr_gpu(
    char *side, char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    devptr_t *dA, magma_int_t *ldda,
    float *tau,
    devptr_t *dC, magma_int_t *lddc,
    float *hwork, magma_int_t *lwork,
    devptr_t *dT, magma_int_t *nb,
    magma_int_t *info )
{
    magma_sormqr_gpu(
        *side, *trans, *m, *n, *k,
        DEVPTR(dA), *ldda,
        tau,
        DEVPTR(dC), *lddc,
        hwork, *lwork,
        DEVPTR(dT), *nb,
        info );
}

#define magmaf_sormqr2_gpu MAGMA_GPU_FORTRAN_NAME( sormqr2, SORMQR2 )
void magmaf_sormqr2_gpu(
    char *side, char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    devptr_t *da, magma_int_t *ldda,
    float *tau,
    devptr_t *dc, magma_int_t *lddc,
    float *wa, magma_int_t *ldwa,
    magma_int_t *info )
{
    magma_sormqr2_gpu(
        *side, *trans, *m, *n, *k,
        DEVPTR(da), *ldda,
        tau,
        DEVPTR(dc), *lddc,
        wa, *ldwa,
        info );
}

#define magmaf_sormtr_gpu MAGMA_GPU_FORTRAN_NAME( sormtr, SORMTR )
void magmaf_sormtr_gpu(
    char *side, char *uplo, char *trans, magma_int_t *m, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    float *tau,
    devptr_t *dc, magma_int_t *lddc,
    float *wa, magma_int_t *ldwa,
    magma_int_t *info )
{
    magma_sormtr_gpu(
        *side, *uplo, *trans, *m, *n,
        DEVPTR(da), *ldda,
        tau,
        DEVPTR(dc), *lddc,
        wa, *ldwa,
        info );
}

#if defined(PRECISION_z) || defined(PRECISION_c)
#define magmaf_ssyevd_gpu MAGMA_GPU_FORTRAN_NAME( ssyevd, SSYEVD )
void magmaf_ssyevd_gpu(
    char *jobz, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    float *w,
    float *wa, magma_int_t *ldwa,
    float *work, magma_int_t *lwork,
    float *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_ssyevd_gpu(
        *jobz, *uplo, *n,
        DEVPTR(da), *ldda,
        w,
        wa, *ldwa,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_ssyevdx_gpu MAGMA_GPU_FORTRAN_NAME( ssyevdx, SSYEVDX )
void magmaf_ssyevdx_gpu(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda, float *vl, float *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    float *w,
    float *wa, magma_int_t *ldwa,
    float *work, magma_int_t *lwork,
    float *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_ssyevdx_gpu(
        *jobz, *range, *uplo, *n,
        DEVPTR(da), *ldda, *vl, *vu, *il, *iu,
        m,
        w,
        wa, *ldwa,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_ssyevx_gpu MAGMA_GPU_FORTRAN_NAME( ssyevx, SSYEVX )
void magmaf_ssyevx_gpu(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda, float *vl, float *vu, magma_int_t *il, magma_int_t *iu, float *abstol,
    magma_int_t *m,
    float *w,
    devptr_t *dz, magma_int_t *lddz,
    float *wa, magma_int_t *ldwa,
    float *wz, magma_int_t *ldwz,
    float *work, magma_int_t *lwork,
    float *rwork,
    magma_int_t *iwork,
    magma_int_t *ifail,
    magma_int_t *info )
{
    magma_ssyevx_gpu(
        *jobz, *range, *uplo, *n,
        DEVPTR(da), *ldda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        DEVPTR(dz), *lddz,
        wa, *ldwa,
        wz, *ldwz,
        work, *lwork,
        rwork,
        iwork,
        ifail,
        info );
}

#define magmaf_ssyevr_gpu MAGMA_GPU_FORTRAN_NAME( ssyevr, SSYEVR )
void magmaf_ssyevr_gpu(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda, float *vl, float *vu, magma_int_t *il, magma_int_t *iu, float *abstol,
    magma_int_t *m,
    float *w,
    devptr_t *dz, magma_int_t *lddz,
    magma_int_t *isuppz,
    float *wa, magma_int_t *ldwa,
    float *wz, magma_int_t *ldwz,
    float *work, magma_int_t *lwork,
    float *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_ssyevr_gpu(
        *jobz, *range, *uplo, *n,
        DEVPTR(da), *ldda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        DEVPTR(dz), *lddz,
        isuppz,
        wa, *ldwa,
        wz, *ldwz,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#else
#define magmaf_ssyevd_gpu MAGMA_GPU_FORTRAN_NAME( ssyevd, SSYEVD )
void magmaf_ssyevd_gpu(
    char *jobz, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    float *w,
    float *wa, magma_int_t *ldwa,
    float *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_ssyevd_gpu(
        *jobz, *uplo, *n,
        DEVPTR(da), *ldda,
        w,
        wa, *ldwa,
        work, *lwork,
        iwork, *liwork,
        info );
}

#define magmaf_ssyevdx_gpu MAGMA_GPU_FORTRAN_NAME( ssyevdx, SSYEVDX )
void magmaf_ssyevdx_gpu(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda, float *vl, float *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    float *w,
    float *wa, magma_int_t *ldwa,
    float *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_ssyevdx_gpu(
        *jobz, *range, *uplo, *n,
        DEVPTR(da), *ldda, *vl, *vu, *il, *iu,
        m,
        w,
        wa, *ldwa,
        work, *lwork,
        iwork, *liwork,
        info );
}

#endif

#define magmaf_ssygst_gpu MAGMA_GPU_FORTRAN_NAME( ssygst, SSYGST )
void magmaf_ssygst_gpu(
    magma_int_t *itype, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    devptr_t *db, magma_int_t *lddb,
    magma_int_t *info )
{
    magma_ssygst_gpu(
        *itype, *uplo, *n,
        DEVPTR(da), *ldda,
        DEVPTR(db), *lddb,
        info );
}

/* ////////////////////////////////////////////////////////////////////////////
 -- MAGMA utility function definitions
*/

#define magmaf_sprint MAGMA_FORTRAN_NAME( sprint, ZPRINT )
void magmaf_sprint(
    magma_int_t *m, magma_int_t *n,
    const float  *A, magma_int_t *lda )
{
    magma_sprint(
        *m, *n,
        A, *lda );
}

#define magmaf_sprint_gpu MAGMA_GPU_FORTRAN_NAME( sprint, ZPRINT )
void magmaf_sprint_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda )
{
    magma_sprint_gpu(
        *m, *n,
        DEVPTR(dA), *ldda );
}


#ifdef __cplusplus
}
#endif
