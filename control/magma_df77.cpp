/*******************************************************************************
 *  This file is AUTOMATICALLY GENERATED by:
 *  ../tools/fortran_wrappers.pl --wrappers ../include/magma_d.h
 *  Do not edit.
 ******************************************************************************/

#include <stdint.h>  // for uintptr_t

#include "magma.h"

/*
 * typedef comming from fortran.h file provided in CUDADIR/src directory
 * it will probably change with future release of CUDA when they use 64 bit addresses
 */
typedef size_t devptr_t;

#ifdef PGI_FORTRAN
#define DEVPTR(__ptr) ((double*)(__ptr))
#else
#define DEVPTR(__ptr) ((double*)(uintptr_t)(*(__ptr)))
#endif

#ifndef MAGMA_FORTRAN_NAME
#if defined(ADD_)
#define MAGMA_FORTRAN_NAME(lcname, UCNAME)  magmaf_##lcname##_
#elif defined(NOCHANGE)
#define MAGMA_FORTRAN_NAME(lcname, UCNAME)  magmaf_##lcname
#elif defined(UPCASE)
#define MAGMA_FORTRAN_NAME(lcname, UCNAME)  MAGMAF_##UCNAME
#endif
#endif

#ifndef MAGMA_GPU_FORTRAN_NAME
#if defined(ADD_)
#define MAGMA_GPU_FORTRAN_NAME(lcname, UCNAME)  magmaf_##lcname##_gpu_
#elif defined(NOCHANGE)
#define MAGMA_GPU_FORTRAN_NAME(lcname, UCNAME)  magmaf_##lcname##_gpu
#elif defined(UPCASE)
#define MAGMA_GPU_FORTRAN_NAME(lcname, UCNAME)  MAGMAF_##UCNAME##_GPU
#endif
#endif

#define PRECISION_d

#ifdef __cplusplus
extern "C" {
#endif

/*
    -- MAGMA (version 1.4.0-beta2) --
       Univ. of Tennessee, Knoxville
       Univ. of California, Berkeley
       Univ. of Colorado, Denver
       June 2013

       @generated d Fri Jun 28 19:31:33 2013
*/




/* ////////////////////////////////////////////////////////////////////////////
   -- MAGMA Auxiliary functions to get the NB used
*/
#define magmaf_get_dpotrf_nb MAGMA_FORTRAN_NAME( get_dpotrf_nb, GET_DPOTRF_NB )
magma_int_t magmaf_get_dpotrf_nb( magma_int_t *m )
{
    return magma_get_dpotrf_nb( *m );
}

#define magmaf_get_dgetrf_nb MAGMA_FORTRAN_NAME( get_dgetrf_nb, GET_DGETRF_NB )
magma_int_t magmaf_get_dgetrf_nb( magma_int_t *m )
{
    return magma_get_dgetrf_nb( *m );
}

#define magmaf_get_dgetri_nb MAGMA_FORTRAN_NAME( get_dgetri_nb, GET_DGETRI_NB )
magma_int_t magmaf_get_dgetri_nb( magma_int_t *m )
{
    return magma_get_dgetri_nb( *m );
}

#define magmaf_get_dgeqp3_nb MAGMA_FORTRAN_NAME( get_dgeqp3_nb, GET_DGEQP3_NB )
magma_int_t magmaf_get_dgeqp3_nb( magma_int_t *m )
{
    return magma_get_dgeqp3_nb( *m );
}

#define magmaf_get_dgeqrf_nb MAGMA_FORTRAN_NAME( get_dgeqrf_nb, GET_DGEQRF_NB )
magma_int_t magmaf_get_dgeqrf_nb( magma_int_t *m )
{
    return magma_get_dgeqrf_nb( *m );
}

#define magmaf_get_dgeqlf_nb MAGMA_FORTRAN_NAME( get_dgeqlf_nb, GET_DGEQLF_NB )
magma_int_t magmaf_get_dgeqlf_nb( magma_int_t *m )
{
    return magma_get_dgeqlf_nb( *m );
}

#define magmaf_get_dgehrd_nb MAGMA_FORTRAN_NAME( get_dgehrd_nb, GET_DGEHRD_NB )
magma_int_t magmaf_get_dgehrd_nb( magma_int_t *m )
{
    return magma_get_dgehrd_nb( *m );
}

#define magmaf_get_dsytrd_nb MAGMA_FORTRAN_NAME( get_dsytrd_nb, GET_DSYTRD_NB )
magma_int_t magmaf_get_dsytrd_nb( magma_int_t *m )
{
    return magma_get_dsytrd_nb( *m );
}

#define magmaf_get_dgelqf_nb MAGMA_FORTRAN_NAME( get_dgelqf_nb, GET_DGELQF_NB )
magma_int_t magmaf_get_dgelqf_nb( magma_int_t *m )
{
    return magma_get_dgelqf_nb( *m );
}

#define magmaf_get_dgebrd_nb MAGMA_FORTRAN_NAME( get_dgebrd_nb, GET_DGEBRD_NB )
magma_int_t magmaf_get_dgebrd_nb( magma_int_t *m )
{
    return magma_get_dgebrd_nb( *m );
}

#define magmaf_get_dsygst_nb MAGMA_FORTRAN_NAME( get_dsygst_nb, GET_DSYGST_NB )
magma_int_t magmaf_get_dsygst_nb( magma_int_t *m )
{
    return magma_get_dsygst_nb( *m );
}

#define magmaf_get_dgesvd_nb MAGMA_FORTRAN_NAME( get_dgesvd_nb, GET_DGESVD_NB )
magma_int_t magmaf_get_dgesvd_nb( magma_int_t *m )
{
    return magma_get_dgesvd_nb( *m );
}

/* ////////////////////////////////////////////////////////////////////////////
   -- MAGMA function definitions / Data on CPU
*/
#define magmaf_dgebrd MAGMA_FORTRAN_NAME( dgebrd, DGEBRD )
void magmaf_dgebrd(
    magma_int_t *m, magma_int_t *n,
    double *A, magma_int_t *lda,
    double *d,
    double *e,
    double *tauq,
    double *taup,
    double *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_dgebrd(
        *m, *n,
        A, *lda,
        d,
        e,
        tauq,
        taup,
        work, *lwork,
        info );
}

#define magmaf_dgehrd2 MAGMA_FORTRAN_NAME( dgehrd2, DGEHRD2 )
void magmaf_dgehrd2(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    double *A, magma_int_t *lda,
    double *tau,
    double *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_dgehrd2(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_dgehrd MAGMA_FORTRAN_NAME( dgehrd, DGEHRD )
void magmaf_dgehrd(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    double *A, magma_int_t *lda,
    double *tau,
    double *work, magma_int_t *lwork,
    devptr_t *dT,
    magma_int_t *info )
{
    magma_dgehrd(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        work, *lwork,
        DEVPTR(dT),
        info );
}

#define magmaf_dgelqf MAGMA_FORTRAN_NAME( dgelqf, DGELQF )
void magmaf_dgelqf(
    magma_int_t *m, magma_int_t *n,
    double *A, magma_int_t *lda,
    double *tau,
    double *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_dgelqf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_dgeqlf MAGMA_FORTRAN_NAME( dgeqlf, DGEQLF )
void magmaf_dgeqlf(
    magma_int_t *m, magma_int_t *n,
    double *A, magma_int_t *lda,
    double *tau,
    double *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_dgeqlf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_dgeqrf MAGMA_FORTRAN_NAME( dgeqrf, DGEQRF )
void magmaf_dgeqrf(
    magma_int_t *m, magma_int_t *n,
    double *A, magma_int_t *lda,
    double *tau,
    double *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_dgeqrf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_dgeqrf4 MAGMA_FORTRAN_NAME( dgeqrf4, DGEQRF4 )
void magmaf_dgeqrf4(
    magma_int_t *num_gpus, magma_int_t *m, magma_int_t *n,
    double *a, magma_int_t *lda,
    double *tau,
    double *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_dgeqrf4(
        *num_gpus, *m, *n,
        a, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_dgeqrf_ooc MAGMA_FORTRAN_NAME( dgeqrf_ooc, DGEQRF_OOC )
void magmaf_dgeqrf_ooc(
    magma_int_t *m, magma_int_t *n,
    double *A, magma_int_t *lda,
    double *tau,
    double *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_dgeqrf_ooc(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_dgesv MAGMA_FORTRAN_NAME( dgesv, DGESV )
void magmaf_dgesv(
    magma_int_t *n, magma_int_t *nrhs,
    double *A, magma_int_t *lda,
    magma_int_t *ipiv,
    double *B, magma_int_t *ldb,
    magma_int_t *info )
{
    magma_dgesv(
        *n, *nrhs,
        A, *lda,
        ipiv,
        B, *ldb,
        info );
}

#define magmaf_dgetrf MAGMA_FORTRAN_NAME( dgetrf, DGETRF )
void magmaf_dgetrf(
    magma_int_t *m, magma_int_t *n,
    double *A, magma_int_t *lda,
    magma_int_t *ipiv,
    magma_int_t *info )
{
    magma_dgetrf(
        *m, *n,
        A, *lda,
        ipiv,
        info );
}

#define magmaf_dposv MAGMA_FORTRAN_NAME( dposv, DPOSV )
void magmaf_dposv(
    char *uplo, magma_int_t *n, magma_int_t *nrhs,
    double *A, magma_int_t *lda,
    double *B, magma_int_t *ldb,
    magma_int_t *info )
{
    magma_dposv(
        *uplo, *n, *nrhs,
        A, *lda,
        B, *ldb,
        info );
}

#define magmaf_dpotrf MAGMA_FORTRAN_NAME( dpotrf, DPOTRF )
void magmaf_dpotrf(
    char *uplo, magma_int_t *n,
    double *A, magma_int_t *lda,
    magma_int_t *info )
{
    magma_dpotrf(
        *uplo, *n,
        A, *lda,
        info );
}

#define magmaf_dpotri MAGMA_FORTRAN_NAME( dpotri, DPOTRI )
void magmaf_dpotri(
    char *uplo, magma_int_t *n,
    double *A, magma_int_t *lda,
    magma_int_t *info )
{
    magma_dpotri(
        *uplo, *n,
        A, *lda,
        info );
}

#define magmaf_dlauum MAGMA_FORTRAN_NAME( dlauum, DLAUUM )
void magmaf_dlauum(
    char *uplo, magma_int_t *n,
    double *A, magma_int_t *lda,
    magma_int_t *info )
{
    magma_dlauum(
        *uplo, *n,
        A, *lda,
        info );
}

#define magmaf_dtrtri MAGMA_FORTRAN_NAME( dtrtri, DTRTRI )
void magmaf_dtrtri(
    char *uplo, char *diag, magma_int_t *n,
    double *A, magma_int_t *lda,
    magma_int_t *info )
{
    magma_dtrtri(
        *uplo, *diag, *n,
        A, *lda,
        info );
}

#define magmaf_dsytrd MAGMA_FORTRAN_NAME( dsytrd, DSYTRD )
void magmaf_dsytrd(
    char *uplo, magma_int_t *n,
    double *A, magma_int_t *lda,
    double *d,
    double *e,
    double *tau,
    double *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_dsytrd(
        *uplo, *n,
        A, *lda,
        d,
        e,
        tau,
        work, *lwork,
        info );
}

#define magmaf_dorgqr MAGMA_FORTRAN_NAME( dorgqr, DORGQR )
void magmaf_dorgqr(
    magma_int_t *m, magma_int_t *n, magma_int_t *k,
    double *a, magma_int_t *lda,
    double *tau,
    devptr_t *dT, magma_int_t *nb,
    magma_int_t *info )
{
    magma_dorgqr(
        *m, *n, *k,
        a, *lda,
        tau,
        DEVPTR(dT), *nb,
        info );
}

#define magmaf_dormql MAGMA_FORTRAN_NAME( dormql, DORMQL )
void magmaf_dormql(
    char *side, char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    double *a, magma_int_t *lda,
    double *tau,
    double *c, magma_int_t *ldc,
    double *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_dormql(
        *side, *trans, *m, *n, *k,
        a, *lda,
        tau,
        c, *ldc,
        work, *lwork,
        info );
}

#define magmaf_dormqr MAGMA_FORTRAN_NAME( dormqr, DORMQR )
void magmaf_dormqr(
    char *side, char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    double *a, magma_int_t *lda,
    double *tau,
    double *c, magma_int_t *ldc,
    double *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_dormqr(
        *side, *trans, *m, *n, *k,
        a, *lda,
        tau,
        c, *ldc,
        work, *lwork,
        info );
}

#define magmaf_dormtr MAGMA_FORTRAN_NAME( dormtr, DORMTR )
void magmaf_dormtr(
    char *side, char *uplo, char *trans, magma_int_t *m, magma_int_t *n,
    double *a, magma_int_t *lda,
    double *tau,
    double *c, magma_int_t *ldc,
    double *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_dormtr(
        *side, *uplo, *trans, *m, *n,
        a, *lda,
        tau,
        c, *ldc,
        work, *lwork,
        info );
}

#define magmaf_dorghr MAGMA_FORTRAN_NAME( dorghr, DORGHR )
void magmaf_dorghr(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    double *a, magma_int_t *lda,
    double *tau,
    devptr_t *dT, magma_int_t *nb,
    magma_int_t *info )
{
    magma_dorghr(
        *n, *ilo, *ihi,
        a, *lda,
        tau,
        DEVPTR(dT), *nb,
        info );
}

#if defined(PRECISION_z) || defined(PRECISION_c)

#define magmaf_dgeev MAGMA_FORTRAN_NAME( dgeev, DGEEV )
void magmaf_dgeev(
    char *jobvl, char *jobvr, magma_int_t *n,
    double *a, magma_int_t *lda,
    double *w,
    double *vl, magma_int_t *ldvl,
    double *vr, magma_int_t *ldvr,
    double *work, magma_int_t *lwork,
    double *rwork,
    magma_int_t *info )
{
    magma_dgeev(
        *jobvl, *jobvr, *n,
        a, *lda,
        w,
        vl, *ldvl,
        vr, *ldvr,
        work, *lwork,
        rwork,
        info );
}

#define magmaf_dgeqp3 MAGMA_FORTRAN_NAME( dgeqp3, DGEQP3 )
void magmaf_dgeqp3(
    magma_int_t *m, magma_int_t *n,
    double *a, magma_int_t *lda,
    magma_int_t *jpvt,
    double *tau,
    double *work, magma_int_t *lwork,
    double *rwork,
    magma_int_t *info )
{
    magma_dgeqp3(
        *m, *n,
        a, *lda,
        jpvt,
        tau,
        work, *lwork,
        rwork,
        info );
}

#define magmaf_dgesvd MAGMA_FORTRAN_NAME( dgesvd, DGESVD )
void magmaf_dgesvd(
    char *jobu, char *jobvt, magma_int_t *m, magma_int_t *n,
    double *a, magma_int_t *lda,
    double *s,
    double *u, magma_int_t *ldu,
    double *vt, magma_int_t *ldvt,
    double *work, magma_int_t *lwork,
    double *rwork,
    magma_int_t *info )
{
    magma_dgesvd(
        *jobu, *jobvt, *m, *n,
        a, *lda,
        s,
        u, *ldu,
        vt, *ldvt,
        work, *lwork,
        rwork,
        info );
}

#define magmaf_dsyevd MAGMA_FORTRAN_NAME( dsyevd, DSYEVD )
void magmaf_dsyevd(
    char *jobz, char *uplo, magma_int_t *n,
    double *a, magma_int_t *lda,
    double *w,
    double *work, magma_int_t *lwork,
    double *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_dsyevd(
        *jobz, *uplo, *n,
        a, *lda,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_dsyevdx MAGMA_FORTRAN_NAME( dsyevdx, DSYEVDX )
void magmaf_dsyevdx(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    double *a, magma_int_t *lda, double *vl, double *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    double *w,
    double *work, magma_int_t *lwork,
    double *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_dsyevdx(
        *jobz, *range, *uplo, *n,
        a, *lda, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_dsyevx MAGMA_FORTRAN_NAME( dsyevx, DSYEVX )
void magmaf_dsyevx(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    double *a, magma_int_t *lda, double *vl, double *vu, magma_int_t *il, magma_int_t *iu, double *abstol,
    magma_int_t *m,
    double *w,
    double *z, magma_int_t *ldz,
    double *work, magma_int_t *lwork,
    double *rwork,
    magma_int_t *iwork,
    magma_int_t *ifail,
    magma_int_t *info )
{
    magma_dsyevx(
        *jobz, *range, *uplo, *n,
        a, *lda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        z, *ldz,
        work, *lwork,
        rwork,
        iwork,
        ifail,
        info );
}

#define magmaf_dsyevr MAGMA_FORTRAN_NAME( dsyevr, DSYEVR )
void magmaf_dsyevr(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    double *a, magma_int_t *lda, double *vl, double *vu, magma_int_t *il, magma_int_t *iu, double *abstol,
    magma_int_t *m,
    double *w,
    double *z, magma_int_t *ldz,
    magma_int_t *isuppz,
    double *work, magma_int_t *lwork,
    double *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_dsyevr(
        *jobz, *range, *uplo, *n,
        a, *lda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        z, *ldz,
        isuppz,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_dsygvd MAGMA_FORTRAN_NAME( dsygvd, DSYGVD )
void magmaf_dsygvd(
    magma_int_t *itype, char *jobz, char *uplo, magma_int_t *n,
    double *a, magma_int_t *lda,
    double *b, magma_int_t *ldb,
    double *w,
    double *work, magma_int_t *lwork,
    double *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_dsygvd(
        *itype, *jobz, *uplo, *n,
        a, *lda,
        b, *ldb,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_dsygvdx MAGMA_FORTRAN_NAME( dsygvdx, DSYGVDX )
void magmaf_dsygvdx(
    magma_int_t *itype, char *jobz, char *range, char *uplo, magma_int_t *n,
    double *a, magma_int_t *lda,
    double *b, magma_int_t *ldb, double *vl, double *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    double *w,
    double *work, magma_int_t *lwork,
    double *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_dsygvdx(
        *itype, *jobz, *range, *uplo, *n,
        a, *lda,
        b, *ldb, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_dsygvx MAGMA_FORTRAN_NAME( dsygvx, DSYGVX )
void magmaf_dsygvx(
    magma_int_t *itype, char *jobz, char *range, char *uplo, magma_int_t *n,
    double *a, magma_int_t *lda,
    double *b, magma_int_t *ldb, double *vl, double *vu, magma_int_t *il, magma_int_t *iu, double *abstol,
    magma_int_t *m,
    double *w,
    double *z, magma_int_t *ldz,
    double *work, magma_int_t *lwork,
    double *rwork,
    magma_int_t *iwork,
    magma_int_t *ifail,
    magma_int_t *info )
{
    magma_dsygvx(
        *itype, *jobz, *range, *uplo, *n,
        a, *lda,
        b, *ldb, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        z, *ldz,
        work, *lwork,
        rwork,
        iwork,
        ifail,
        info );
}

#define magmaf_dsygvr MAGMA_FORTRAN_NAME( dsygvr, DSYGVR )
void magmaf_dsygvr(
    magma_int_t *itype, char *jobz, char *range, char *uplo, magma_int_t *n,
    double *a, magma_int_t *lda,
    double *b, magma_int_t *ldb, double *vl, double *vu, magma_int_t *il, magma_int_t *iu, double *abstol,
    magma_int_t *m,
    double *w,
    double *z, magma_int_t *ldz,
    magma_int_t *isuppz,
    double *work, magma_int_t *lwork,
    double *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_dsygvr(
        *itype, *jobz, *range, *uplo, *n,
        a, *lda,
        b, *ldb, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        z, *ldz,
        isuppz,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_dstedx MAGMA_FORTRAN_NAME( dstedx, DSTEDX )
void magmaf_dstedx(
    char *range, magma_int_t *n, double *vl, double *vu, magma_int_t *il, magma_int_t *iu,
    double *D,
    double *E,
    double *Z, magma_int_t *ldz,
    double *rwork, magma_int_t *ldrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    double *dwork,
    magma_int_t *info )
{
    magma_dstedx(
        *range, *n, *vl, *vu, *il, *iu,
        D,
        E,
        Z, *ldz,
        rwork, *ldrwork,
        iwork, *liwork,
        dwork,
        info );
}

#else /* not (defined(PRECISION_z) || defined(PRECISION_c)) */

#define magmaf_dgeev MAGMA_FORTRAN_NAME( dgeev, DGEEV )
void magmaf_dgeev(
    char *jobvl, char *jobvr, magma_int_t *n,
    double *a, magma_int_t *lda,
    double *wr,
    double *wi,
    double *vl, magma_int_t *ldvl,
    double *vr, magma_int_t *ldvr,
    double *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_dgeev(
        *jobvl, *jobvr, *n,
        a, *lda,
        wr,
        wi,
        vl, *ldvl,
        vr, *ldvr,
        work, *lwork,
        info );
}

#define magmaf_dgeqp3 MAGMA_FORTRAN_NAME( dgeqp3, DGEQP3 )
void magmaf_dgeqp3(
    magma_int_t *m, magma_int_t *n,
    double *a, magma_int_t *lda,
    magma_int_t *jpvt,
    double *tau,
    double *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_dgeqp3(
        *m, *n,
        a, *lda,
        jpvt,
        tau,
        work, *lwork,
        info );
}

#define magmaf_dgesvd MAGMA_FORTRAN_NAME( dgesvd, DGESVD )
void magmaf_dgesvd(
    char *jobu, char *jobvt, magma_int_t *m, magma_int_t *n,
    double *a, magma_int_t *lda,
    double *s,
    double *u, magma_int_t *ldu,
    double *vt, magma_int_t *ldvt,
    double *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_dgesvd(
        *jobu, *jobvt, *m, *n,
        a, *lda,
        s,
        u, *ldu,
        vt, *ldvt,
        work, *lwork,
        info );
}

#define magmaf_dsyevd MAGMA_FORTRAN_NAME( dsyevd, DSYEVD )
void magmaf_dsyevd(
    char *jobz, char *uplo, magma_int_t *n,
    double *a, magma_int_t *lda,
    double *w,
    double *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_dsyevd(
        *jobz, *uplo, *n,
        a, *lda,
        w,
        work, *lwork,
        iwork, *liwork,
        info );
}

#define magmaf_dsyevdx MAGMA_FORTRAN_NAME( dsyevdx, DSYEVDX )
void magmaf_dsyevdx(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    double *a, magma_int_t *lda, double *vl, double *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    double *w,
    double *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_dsyevdx(
        *jobz, *range, *uplo, *n,
        a, *lda, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        iwork, *liwork,
        info );
}

#define magmaf_dsygvd MAGMA_FORTRAN_NAME( dsygvd, DSYGVD )
void magmaf_dsygvd(
    magma_int_t *itype, char *jobz, char *uplo, magma_int_t *n,
    double *a, magma_int_t *lda,
    double *b, magma_int_t *ldb,
    double *w,
    double *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_dsygvd(
        *itype, *jobz, *uplo, *n,
        a, *lda,
        b, *ldb,
        w,
        work, *lwork,
        iwork, *liwork,
        info );
}

#define magmaf_dsygvdx MAGMA_FORTRAN_NAME( dsygvdx, DSYGVDX )
void magmaf_dsygvdx(
    magma_int_t *itype, char *jobz, char *range, char *uplo, magma_int_t *n,
    double *a, magma_int_t *lda,
    double *b, magma_int_t *ldb, double *vl, double *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    double *w,
    double *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_dsygvdx(
        *itype, *jobz, *range, *uplo, *n,
        a, *lda,
        b, *ldb, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        iwork, *liwork,
        info );
}

#define magmaf_dstedx MAGMA_FORTRAN_NAME( dstedx, DSTEDX )
void magmaf_dstedx(
    char *range, magma_int_t *n, double *vl, double *vu, magma_int_t *il, magma_int_t *iu,
    double *d,
    double *e,
    double *z, magma_int_t *ldz,
    double *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    double *dwork,
    magma_int_t *info )
{
    magma_dstedx(
        *range, *n, *vl, *vu, *il, *iu,
        d,
        e,
        z, *ldz,
        work, *lwork,
        iwork, *liwork,
        dwork,
        info );
}

#endif /* not (defined(PRECISION_z) || defined(PRECISION_c)) */

#define magmaf_dsygst MAGMA_FORTRAN_NAME( dsygst, DSYGST )
void magmaf_dsygst(
    magma_int_t *itype, char *uplo, magma_int_t *n,
    double *a, magma_int_t *lda,
    double *b, magma_int_t *ldb,
    magma_int_t *info )
{
    magma_dsygst(
        *itype, *uplo, *n,
        a, *lda,
        b, *ldb,
        info );
}

/* ////////////////////////////////////////////////////////////////////////////
 -- MAGMA function definitions / Data on CPU / Multi-GPU
*/
#if defined(PRECISION_z) || defined(PRECISION_c)
#define magmaf_dgeev_m MAGMA_FORTRAN_NAME( dgeev_m, DGEEV_M )
void magmaf_dgeev_m(
    char *jobvl, char *jobvr, magma_int_t *n,
    double *A, magma_int_t *lda,
    double *W,
    double *vl, magma_int_t *ldvl,
    double *vr, magma_int_t *ldvr,
    double *work, magma_int_t *lwork,
    double *rwork,
    magma_int_t *info )
{
    magma_dgeev_m(
        *jobvl, *jobvr, *n,
        A, *lda,
        W,
        vl, *ldvl,
        vr, *ldvr,
        work, *lwork,
        rwork,
        info );
}

#else
#define magmaf_dgeev_m MAGMA_FORTRAN_NAME( dgeev_m, DGEEV_M )
void magmaf_dgeev_m(
    char *jobvl, char *jobvr, magma_int_t *n,
    double *A, magma_int_t *lda,
    double *WR,
    double *WI,
    double *vl, magma_int_t *ldvl,
    double *vr, magma_int_t *ldvr,
    double *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_dgeev_m(
        *jobvl, *jobvr, *n,
        A, *lda,
        WR,
        WI,
        vl, *ldvl,
        vr, *ldvr,
        work, *lwork,
        info );
}

#endif

#define magmaf_dgehrd_m MAGMA_FORTRAN_NAME( dgehrd_m, DGEHRD_M )
void magmaf_dgehrd_m(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    double *A, magma_int_t *lda,
    double *tau,
    double *work, magma_int_t *lwork,
    double *T,
    magma_int_t *info )
{
    magma_dgehrd_m(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        work, *lwork,
        T,
        info );
}

#define magmaf_dorghr_m MAGMA_FORTRAN_NAME( dorghr_m, DORGHR_M )
void magmaf_dorghr_m(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    double *A, magma_int_t *lda,
    double *tau,
    double *T, magma_int_t *nb,
    magma_int_t *info )
{
    magma_dorghr_m(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        T, *nb,
        info );
}

#define magmaf_dorgqr_m MAGMA_FORTRAN_NAME( dorgqr_m, DORGQR_M )
void magmaf_dorgqr_m(
    magma_int_t *m, magma_int_t *n, magma_int_t *k,
    double *A, magma_int_t *lda,
    double *tau,
    double *T, magma_int_t *nb,
    magma_int_t *info )
{
    magma_dorgqr_m(
        *m, *n, *k,
        A, *lda,
        tau,
        T, *nb,
        info );
}

/* ////////////////////////////////////////////////////////////////////////////
 -- MAGMA function definitions / Data on GPU
*/
#define magmaf_dgels_gpu MAGMA_GPU_FORTRAN_NAME( dgels, DGELS )
void magmaf_dgels_gpu(
    char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    devptr_t *dB, magma_int_t *lddb,
    double *hwork, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_dgels_gpu(
        *trans, *m, *n, *nrhs,
        DEVPTR(dA), *ldda,
        DEVPTR(dB), *lddb,
        hwork, *lwork,
        info );
}

#define magmaf_dgels3_gpu MAGMA_GPU_FORTRAN_NAME( dgels3, DGELS3 )
void magmaf_dgels3_gpu(
    char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    devptr_t *dB, magma_int_t *lddb,
    double *hwork, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_dgels3_gpu(
        *trans, *m, *n, *nrhs,
        DEVPTR(dA), *ldda,
        DEVPTR(dB), *lddb,
        hwork, *lwork,
        info );
}

#define magmaf_dgelqf_gpu MAGMA_GPU_FORTRAN_NAME( dgelqf, DGELQF )
void magmaf_dgelqf_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    double *tau,
    double *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_dgelqf_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_dgeqrf_gpu MAGMA_GPU_FORTRAN_NAME( dgeqrf, DGEQRF )
void magmaf_dgeqrf_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    double *tau,
    devptr_t *dT,
    magma_int_t *info )
{
    magma_dgeqrf_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        tau,
        DEVPTR(dT),
        info );
}

#define magmaf_dgeqrf2_gpu MAGMA_GPU_FORTRAN_NAME( dgeqrf2, DGEQRF2 )
void magmaf_dgeqrf2_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    double *tau,
    magma_int_t *info )
{
    magma_dgeqrf2_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        tau,
        info );
}

#define magmaf_dgeqrf3_gpu MAGMA_GPU_FORTRAN_NAME( dgeqrf3, DGEQRF3 )
void magmaf_dgeqrf3_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    double *tau,
    devptr_t *dT,
    magma_int_t *info )
{
    magma_dgeqrf3_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        tau,
        DEVPTR(dT),
        info );
}

#define magmaf_dgeqrs_gpu MAGMA_GPU_FORTRAN_NAME( dgeqrs, DGEQRS )
void magmaf_dgeqrs_gpu(
    magma_int_t *m, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    double *tau,
    devptr_t *dT,
    devptr_t *dB, magma_int_t *lddb,
    double *hwork, magma_int_t *lhwork,
    magma_int_t *info )
{
    magma_dgeqrs_gpu(
        *m, *n, *nrhs,
        DEVPTR(dA), *ldda,
        tau,
        DEVPTR(dT),
        DEVPTR(dB), *lddb,
        hwork, *lhwork,
        info );
}

#define magmaf_dgeqrs3_gpu MAGMA_GPU_FORTRAN_NAME( dgeqrs3, DGEQRS3 )
void magmaf_dgeqrs3_gpu(
    magma_int_t *m, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    double *tau,
    devptr_t *dT,
    devptr_t *dB, magma_int_t *lddb,
    double *hwork, magma_int_t *lhwork,
    magma_int_t *info )
{
    magma_dgeqrs3_gpu(
        *m, *n, *nrhs,
        DEVPTR(dA), *ldda,
        tau,
        DEVPTR(dT),
        DEVPTR(dB), *lddb,
        hwork, *lhwork,
        info );
}

#define magmaf_dgessm_gpu MAGMA_GPU_FORTRAN_NAME( dgessm, DGESSM )
void magmaf_dgessm_gpu(
    char *storev, magma_int_t *m, magma_int_t *n, magma_int_t *k, magma_int_t *ib,
    magma_int_t *ipiv,
    devptr_t *dL1, magma_int_t *lddl1,
    devptr_t *dL, magma_int_t *lddl,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_dgessm_gpu(
        *storev, *m, *n, *k, *ib,
        ipiv,
        DEVPTR(dL1), *lddl1,
        DEVPTR(dL), *lddl,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_dgesv_gpu MAGMA_GPU_FORTRAN_NAME( dgesv, DGESV )
void magmaf_dgesv_gpu(
    magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *ipiv,
    devptr_t *dB, magma_int_t *lddb,
    magma_int_t *info )
{
    magma_dgesv_gpu(
        *n, *nrhs,
        DEVPTR(dA), *ldda,
        ipiv,
        DEVPTR(dB), *lddb,
        info );
}

#define magmaf_dgetrf_gpu MAGMA_GPU_FORTRAN_NAME( dgetrf, DGETRF )
void magmaf_dgetrf_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *ipiv,
    magma_int_t *info )
{
    magma_dgetrf_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        ipiv,
        info );
}

#define magmaf_dgetrf_nopiv_gpu MAGMA_GPU_FORTRAN_NAME( dgetrf_nopiv, DGETRF_NOPIV )
void magmaf_dgetrf_nopiv_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_dgetrf_nopiv_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_dgetri_gpu MAGMA_GPU_FORTRAN_NAME( dgetri, DGETRI )
void magmaf_dgetri_gpu(
    magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *ipiv,
    devptr_t *dwork, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_dgetri_gpu(
        *n,
        DEVPTR(dA), *ldda,
        ipiv,
        DEVPTR(dwork), *lwork,
        info );
}

#define magmaf_dgetrs_gpu MAGMA_GPU_FORTRAN_NAME( dgetrs, DGETRS )
void magmaf_dgetrs_gpu(
    char *trans, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *ipiv,
    devptr_t *dB, magma_int_t *lddb,
    magma_int_t *info )
{
    magma_dgetrs_gpu(
        *trans, *n, *nrhs,
        DEVPTR(dA), *ldda,
        ipiv,
        DEVPTR(dB), *lddb,
        info );
}

#define magmaf_dlarfb_gpu MAGMA_GPU_FORTRAN_NAME( dlarfb, DLARFB )
void magmaf_dlarfb_gpu(
    char *side, char *trans, char *direct, char *storev, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    devptr_t *dv, magma_int_t *ldv,
    devptr_t *dt, magma_int_t *ldt,
    devptr_t *dc, magma_int_t *ldc,
    devptr_t *dwork, magma_int_t *ldwork )
{
    magma_dlarfb_gpu(
        *side, *trans, *direct, *storev, *m, *n, *k,
        DEVPTR(dv), *ldv,
        DEVPTR(dt), *ldt,
        DEVPTR(dc), *ldc,
        DEVPTR(dwork), *ldwork );
}

#define magmaf_dlarfb_gpu_gemm MAGMA_FORTRAN_NAME( dlarfb_gpu_gemm, DLARFB_GPU_GEMM )
void magmaf_dlarfb_gpu_gemm(
    char *side, char *trans, char *direct, char *storev, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    const double *dv, magma_int_t *ldv,
    const double *dt, magma_int_t *ldt,
    double *dc, magma_int_t *ldc,
    double *dwork, magma_int_t *ldwork,
    double *dworkvt, magma_int_t *ldworkvt )
{
    magma_dlarfb_gpu_gemm(
        *side, *trans, *direct, *storev, *m, *n, *k,
        dv, *ldv,
        dt, *ldt,
        dc, *ldc,
        dwork, *ldwork,
        dworkvt, *ldworkvt );
}

#define magmaf_dposv_gpu MAGMA_GPU_FORTRAN_NAME( dposv, DPOSV )
void magmaf_dposv_gpu(
    char *uplo, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    devptr_t *dB, magma_int_t *lddb,
    magma_int_t *info )
{
    magma_dposv_gpu(
        *uplo, *n, *nrhs,
        DEVPTR(dA), *ldda,
        DEVPTR(dB), *lddb,
        info );
}

#define magmaf_dpotrf_gpu MAGMA_GPU_FORTRAN_NAME( dpotrf, DPOTRF )
void magmaf_dpotrf_gpu(
    char *uplo, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_dpotrf_gpu(
        *uplo, *n,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_dpotri_gpu MAGMA_GPU_FORTRAN_NAME( dpotri, DPOTRI )
void magmaf_dpotri_gpu(
    char *uplo, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_dpotri_gpu(
        *uplo, *n,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_dlauum_gpu MAGMA_GPU_FORTRAN_NAME( dlauum, DLAUUM )
void magmaf_dlauum_gpu(
    char *uplo, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_dlauum_gpu(
        *uplo, *n,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_dtrtri_gpu MAGMA_GPU_FORTRAN_NAME( dtrtri, DTRTRI )
void magmaf_dtrtri_gpu(
    char *uplo, char *diag, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_dtrtri_gpu(
        *uplo, *diag, *n,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_dsytrd_gpu MAGMA_GPU_FORTRAN_NAME( dsytrd, DSYTRD )
void magmaf_dsytrd_gpu(
    char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    double *d,
    double *e,
    double *tau,
    double *wa, magma_int_t *ldwa,
    double *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_dsytrd_gpu(
        *uplo, *n,
        DEVPTR(da), *ldda,
        d,
        e,
        tau,
        wa, *ldwa,
        work, *lwork,
        info );
}

#define magmaf_dsytrd2_gpu MAGMA_GPU_FORTRAN_NAME( dsytrd2, DSYTRD2 )
void magmaf_dsytrd2_gpu(
    char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    double *d,
    double *e,
    double *tau,
    double *wa, magma_int_t *ldwa,
    double *work, magma_int_t *lwork,
    devptr_t *dwork, magma_int_t *ldwork,
    magma_int_t *info )
{
    magma_dsytrd2_gpu(
        *uplo, *n,
        DEVPTR(da), *ldda,
        d,
        e,
        tau,
        wa, *ldwa,
        work, *lwork,
        DEVPTR(dwork), *ldwork,
        info );
}

#define magmaf_dpotrs_gpu MAGMA_GPU_FORTRAN_NAME( dpotrs, DPOTRS )
void magmaf_dpotrs_gpu(
    char *uplo, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    devptr_t *dB, magma_int_t *lddb,
    magma_int_t *info )
{
    magma_dpotrs_gpu(
        *uplo, *n, *nrhs,
        DEVPTR(dA), *ldda,
        DEVPTR(dB), *lddb,
        info );
}

#define magmaf_dssssm_gpu MAGMA_GPU_FORTRAN_NAME( dssssm, DSSSSM )
void magmaf_dssssm_gpu(
    char *storev, magma_int_t *m1, magma_int_t *n1, magma_int_t *m2, magma_int_t *n2, magma_int_t *k, magma_int_t *ib,
    devptr_t *dA1, magma_int_t *ldda1,
    devptr_t *dA2, magma_int_t *ldda2,
    devptr_t *dL1, magma_int_t *lddl1,
    devptr_t *dL2, magma_int_t *lddl2,
    magma_int_t *IPIV,
    magma_int_t *info )
{
    magma_dssssm_gpu(
        *storev, *m1, *n1, *m2, *n2, *k, *ib,
        DEVPTR(dA1), *ldda1,
        DEVPTR(dA2), *ldda2,
        DEVPTR(dL1), *lddl1,
        DEVPTR(dL2), *lddl2,
        IPIV,
        info );
}

#define magmaf_dorgqr_gpu MAGMA_GPU_FORTRAN_NAME( dorgqr, DORGQR )
void magmaf_dorgqr_gpu(
    magma_int_t *m, magma_int_t *n, magma_int_t *k,
    devptr_t *da, magma_int_t *ldda,
    double *tau,
    devptr_t *dwork, magma_int_t *nb,
    magma_int_t *info )
{
    magma_dorgqr_gpu(
        *m, *n, *k,
        DEVPTR(da), *ldda,
        tau,
        DEVPTR(dwork), *nb,
        info );
}

#define magmaf_dormql2_gpu MAGMA_GPU_FORTRAN_NAME( dormql2, DORMQL2 )
void magmaf_dormql2_gpu(
    char *side, char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    devptr_t *da, magma_int_t *ldda,
    double *tau,
    devptr_t *dc, magma_int_t *lddc,
    double *wa, magma_int_t *ldwa,
    magma_int_t *info )
{
    magma_dormql2_gpu(
        *side, *trans, *m, *n, *k,
        DEVPTR(da), *ldda,
        tau,
        DEVPTR(dc), *lddc,
        wa, *ldwa,
        info );
}

#define magmaf_dormqr_gpu MAGMA_GPU_FORTRAN_NAME( dormqr, DORMQR )
void magmaf_dormqr_gpu(
    char *side, char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    devptr_t *dA, magma_int_t *ldda,
    double *tau,
    devptr_t *dC, magma_int_t *lddc,
    double *hwork, magma_int_t *lwork,
    devptr_t *dT, magma_int_t *nb,
    magma_int_t *info )
{
    magma_dormqr_gpu(
        *side, *trans, *m, *n, *k,
        DEVPTR(dA), *ldda,
        tau,
        DEVPTR(dC), *lddc,
        hwork, *lwork,
        DEVPTR(dT), *nb,
        info );
}

#define magmaf_dormqr2_gpu MAGMA_GPU_FORTRAN_NAME( dormqr2, DORMQR2 )
void magmaf_dormqr2_gpu(
    char *side, char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    devptr_t *da, magma_int_t *ldda,
    double *tau,
    devptr_t *dc, magma_int_t *lddc,
    double *wa, magma_int_t *ldwa,
    magma_int_t *info )
{
    magma_dormqr2_gpu(
        *side, *trans, *m, *n, *k,
        DEVPTR(da), *ldda,
        tau,
        DEVPTR(dc), *lddc,
        wa, *ldwa,
        info );
}

#define magmaf_dormtr_gpu MAGMA_GPU_FORTRAN_NAME( dormtr, DORMTR )
void magmaf_dormtr_gpu(
    char *side, char *uplo, char *trans, magma_int_t *m, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    double *tau,
    devptr_t *dc, magma_int_t *lddc,
    double *wa, magma_int_t *ldwa,
    magma_int_t *info )
{
    magma_dormtr_gpu(
        *side, *uplo, *trans, *m, *n,
        DEVPTR(da), *ldda,
        tau,
        DEVPTR(dc), *lddc,
        wa, *ldwa,
        info );
}

#if defined(PRECISION_z) || defined(PRECISION_c)
#define magmaf_dsyevd_gpu MAGMA_GPU_FORTRAN_NAME( dsyevd, DSYEVD )
void magmaf_dsyevd_gpu(
    char *jobz, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    double *w,
    double *wa, magma_int_t *ldwa,
    double *work, magma_int_t *lwork,
    double *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_dsyevd_gpu(
        *jobz, *uplo, *n,
        DEVPTR(da), *ldda,
        w,
        wa, *ldwa,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_dsyevdx_gpu MAGMA_GPU_FORTRAN_NAME( dsyevdx, DSYEVDX )
void magmaf_dsyevdx_gpu(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda, double *vl, double *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    double *w,
    double *wa, magma_int_t *ldwa,
    double *work, magma_int_t *lwork,
    double *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_dsyevdx_gpu(
        *jobz, *range, *uplo, *n,
        DEVPTR(da), *ldda, *vl, *vu, *il, *iu,
        m,
        w,
        wa, *ldwa,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_dsyevx_gpu MAGMA_GPU_FORTRAN_NAME( dsyevx, DSYEVX )
void magmaf_dsyevx_gpu(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda, double *vl, double *vu, magma_int_t *il, magma_int_t *iu, double *abstol,
    magma_int_t *m,
    double *w,
    devptr_t *dz, magma_int_t *lddz,
    double *wa, magma_int_t *ldwa,
    double *wz, magma_int_t *ldwz,
    double *work, magma_int_t *lwork,
    double *rwork,
    magma_int_t *iwork,
    magma_int_t *ifail,
    magma_int_t *info )
{
    magma_dsyevx_gpu(
        *jobz, *range, *uplo, *n,
        DEVPTR(da), *ldda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        DEVPTR(dz), *lddz,
        wa, *ldwa,
        wz, *ldwz,
        work, *lwork,
        rwork,
        iwork,
        ifail,
        info );
}

#define magmaf_dsyevr_gpu MAGMA_GPU_FORTRAN_NAME( dsyevr, DSYEVR )
void magmaf_dsyevr_gpu(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda, double *vl, double *vu, magma_int_t *il, magma_int_t *iu, double *abstol,
    magma_int_t *m,
    double *w,
    devptr_t *dz, magma_int_t *lddz,
    magma_int_t *isuppz,
    double *wa, magma_int_t *ldwa,
    double *wz, magma_int_t *ldwz,
    double *work, magma_int_t *lwork,
    double *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_dsyevr_gpu(
        *jobz, *range, *uplo, *n,
        DEVPTR(da), *ldda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        DEVPTR(dz), *lddz,
        isuppz,
        wa, *ldwa,
        wz, *ldwz,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#else
#define magmaf_dsyevd_gpu MAGMA_GPU_FORTRAN_NAME( dsyevd, DSYEVD )
void magmaf_dsyevd_gpu(
    char *jobz, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    double *w,
    double *wa, magma_int_t *ldwa,
    double *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_dsyevd_gpu(
        *jobz, *uplo, *n,
        DEVPTR(da), *ldda,
        w,
        wa, *ldwa,
        work, *lwork,
        iwork, *liwork,
        info );
}

#define magmaf_dsyevdx_gpu MAGMA_GPU_FORTRAN_NAME( dsyevdx, DSYEVDX )
void magmaf_dsyevdx_gpu(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda, double *vl, double *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    double *w,
    double *wa, magma_int_t *ldwa,
    double *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_dsyevdx_gpu(
        *jobz, *range, *uplo, *n,
        DEVPTR(da), *ldda, *vl, *vu, *il, *iu,
        m,
        w,
        wa, *ldwa,
        work, *lwork,
        iwork, *liwork,
        info );
}

#endif

#define magmaf_dsygst_gpu MAGMA_GPU_FORTRAN_NAME( dsygst, DSYGST )
void magmaf_dsygst_gpu(
    magma_int_t *itype, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    devptr_t *db, magma_int_t *lddb,
    magma_int_t *info )
{
    magma_dsygst_gpu(
        *itype, *uplo, *n,
        DEVPTR(da), *ldda,
        DEVPTR(db), *lddb,
        info );
}

/* ////////////////////////////////////////////////////////////////////////////
 -- MAGMA utility function definitions
*/

#define magmaf_dprint MAGMA_FORTRAN_NAME( dprint, ZPRINT )
void magmaf_dprint(
    magma_int_t *m, magma_int_t *n,
    const double  *A, magma_int_t *lda )
{
    magma_dprint(
        *m, *n,
        A, *lda );
}

#define magmaf_dprint_gpu MAGMA_GPU_FORTRAN_NAME( dprint, ZPRINT )
void magmaf_dprint_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda )
{
    magma_dprint_gpu(
        *m, *n,
        DEVPTR(dA), *ldda );
}


#ifdef __cplusplus
}
#endif
