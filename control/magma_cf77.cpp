/*******************************************************************************
 *  This file is AUTOMATICALLY GENERATED by:
 *  ../tools/fortran_wrappers.pl --wrappers ../include/magma_c.h
 *  Do not edit.
 ******************************************************************************/

#include <stdint.h>  // for uintptr_t

#include "magma.h"

/*
 * typedef comming from fortran.h file provided in CUDADIR/src directory
 * it will probably change with future release of CUDA when they use 64 bit addresses
 */
typedef size_t devptr_t;

#ifdef PGI_FORTRAN
#define DEVPTR(ptr_) ((magmaFloatComplex*)(ptr_))
#else
#define DEVPTR(ptr_) ((magmaFloatComplex*)(uintptr_t)(*(ptr_)))
#endif

#ifndef MAGMA_FORTRAN_NAME
#if defined(ADD_)
#define MAGMA_FORTRAN_NAME(lcname, UCNAME)  magmaf_##lcname##_
#elif defined(NOCHANGE)
#define MAGMA_FORTRAN_NAME(lcname, UCNAME)  magmaf_##lcname
#elif defined(UPCASE)
#define MAGMA_FORTRAN_NAME(lcname, UCNAME)  MAGMAF_##UCNAME
#endif
#endif

#ifndef MAGMA_GPU_FORTRAN_NAME
#if defined(ADD_)
#define MAGMA_GPU_FORTRAN_NAME(lcname, UCNAME)  magmaf_##lcname##_gpu_
#elif defined(NOCHANGE)
#define MAGMA_GPU_FORTRAN_NAME(lcname, UCNAME)  magmaf_##lcname##_gpu
#elif defined(UPCASE)
#define MAGMA_GPU_FORTRAN_NAME(lcname, UCNAME)  MAGMAF_##UCNAME##_GPU
#endif
#endif

#define PRECISION_c

#ifdef __cplusplus
extern "C" {
#endif

/*
    -- MAGMA (version 1.4.0) --
       Univ. of Tennessee, Knoxville
       Univ. of California, Berkeley
       Univ. of Colorado, Denver
       August 2013

       @generated c Tue Aug 13 16:43:32 2013
*/




/* ////////////////////////////////////////////////////////////////////////////
   -- MAGMA Auxiliary functions to get the NB used
*/
#define magmaf_get_cpotrf_nb MAGMA_FORTRAN_NAME( get_cpotrf_nb, GET_CPOTRF_NB )
magma_int_t magmaf_get_cpotrf_nb( magma_int_t *m )
{
    return magma_get_cpotrf_nb( *m );
}

#define magmaf_get_cgetrf_nb MAGMA_FORTRAN_NAME( get_cgetrf_nb, GET_CGETRF_NB )
magma_int_t magmaf_get_cgetrf_nb( magma_int_t *m )
{
    return magma_get_cgetrf_nb( *m );
}

#define magmaf_get_cgetri_nb MAGMA_FORTRAN_NAME( get_cgetri_nb, GET_CGETRI_NB )
magma_int_t magmaf_get_cgetri_nb( magma_int_t *m )
{
    return magma_get_cgetri_nb( *m );
}

#define magmaf_get_cgeqp3_nb MAGMA_FORTRAN_NAME( get_cgeqp3_nb, GET_CGEQP3_NB )
magma_int_t magmaf_get_cgeqp3_nb( magma_int_t *m )
{
    return magma_get_cgeqp3_nb( *m );
}

#define magmaf_get_cgeqrf_nb MAGMA_FORTRAN_NAME( get_cgeqrf_nb, GET_CGEQRF_NB )
magma_int_t magmaf_get_cgeqrf_nb( magma_int_t *m )
{
    return magma_get_cgeqrf_nb( *m );
}

#define magmaf_get_cgeqlf_nb MAGMA_FORTRAN_NAME( get_cgeqlf_nb, GET_CGEQLF_NB )
magma_int_t magmaf_get_cgeqlf_nb( magma_int_t *m )
{
    return magma_get_cgeqlf_nb( *m );
}

#define magmaf_get_cgehrd_nb MAGMA_FORTRAN_NAME( get_cgehrd_nb, GET_CGEHRD_NB )
magma_int_t magmaf_get_cgehrd_nb( magma_int_t *m )
{
    return magma_get_cgehrd_nb( *m );
}

#define magmaf_get_chetrd_nb MAGMA_FORTRAN_NAME( get_chetrd_nb, GET_CHETRD_NB )
magma_int_t magmaf_get_chetrd_nb( magma_int_t *m )
{
    return magma_get_chetrd_nb( *m );
}

#define magmaf_get_cgelqf_nb MAGMA_FORTRAN_NAME( get_cgelqf_nb, GET_CGELQF_NB )
magma_int_t magmaf_get_cgelqf_nb( magma_int_t *m )
{
    return magma_get_cgelqf_nb( *m );
}

#define magmaf_get_cgebrd_nb MAGMA_FORTRAN_NAME( get_cgebrd_nb, GET_CGEBRD_NB )
magma_int_t magmaf_get_cgebrd_nb( magma_int_t *m )
{
    return magma_get_cgebrd_nb( *m );
}

#define magmaf_get_chegst_nb MAGMA_FORTRAN_NAME( get_chegst_nb, GET_CHEGST_NB )
magma_int_t magmaf_get_chegst_nb( magma_int_t *m )
{
    return magma_get_chegst_nb( *m );
}

#define magmaf_get_cgesvd_nb MAGMA_FORTRAN_NAME( get_cgesvd_nb, GET_CGESVD_NB )
magma_int_t magmaf_get_cgesvd_nb( magma_int_t *m )
{
    return magma_get_cgesvd_nb( *m );
}

/* ////////////////////////////////////////////////////////////////////////////
   -- MAGMA function definitions / Data on CPU
*/
#define magmaf_cgebrd MAGMA_FORTRAN_NAME( cgebrd, CGEBRD )
void magmaf_cgebrd(
    magma_int_t *m, magma_int_t *n,
    magmaFloatComplex *A, magma_int_t *lda,
    float *d,
    float *e,
    magmaFloatComplex *tauq,
    magmaFloatComplex *taup,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_cgebrd(
        *m, *n,
        A, *lda,
        d,
        e,
        tauq,
        taup,
        work, *lwork,
        info );
}

#define magmaf_cgehrd2 MAGMA_FORTRAN_NAME( cgehrd2, CGEHRD2 )
void magmaf_cgehrd2(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    magmaFloatComplex *A, magma_int_t *lda,
    magmaFloatComplex *tau,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_cgehrd2(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_cgehrd MAGMA_FORTRAN_NAME( cgehrd, CGEHRD )
void magmaf_cgehrd(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    magmaFloatComplex *A, magma_int_t *lda,
    magmaFloatComplex *tau,
    magmaFloatComplex *work, magma_int_t *lwork,
    devptr_t *dT,
    magma_int_t *info )
{
    magma_cgehrd(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        work, *lwork,
        DEVPTR(dT),
        info );
}

#define magmaf_cgelqf MAGMA_FORTRAN_NAME( cgelqf, CGELQF )
void magmaf_cgelqf(
    magma_int_t *m, magma_int_t *n,
    magmaFloatComplex *A, magma_int_t *lda,
    magmaFloatComplex *tau,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_cgelqf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_cgeqlf MAGMA_FORTRAN_NAME( cgeqlf, CGEQLF )
void magmaf_cgeqlf(
    magma_int_t *m, magma_int_t *n,
    magmaFloatComplex *A, magma_int_t *lda,
    magmaFloatComplex *tau,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_cgeqlf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_cgeqrf MAGMA_FORTRAN_NAME( cgeqrf, CGEQRF )
void magmaf_cgeqrf(
    magma_int_t *m, magma_int_t *n,
    magmaFloatComplex *A, magma_int_t *lda,
    magmaFloatComplex *tau,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_cgeqrf(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_cgeqrf4 MAGMA_FORTRAN_NAME( cgeqrf4, CGEQRF4 )
void magmaf_cgeqrf4(
    magma_int_t *num_gpus, magma_int_t *m, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    magmaFloatComplex *tau,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_cgeqrf4(
        *num_gpus, *m, *n,
        a, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_cgeqrf_ooc MAGMA_FORTRAN_NAME( cgeqrf_ooc, CGEQRF_OOC )
void magmaf_cgeqrf_ooc(
    magma_int_t *m, magma_int_t *n,
    magmaFloatComplex *A, magma_int_t *lda,
    magmaFloatComplex *tau,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_cgeqrf_ooc(
        *m, *n,
        A, *lda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_cgesv MAGMA_FORTRAN_NAME( cgesv, CGESV )
void magmaf_cgesv(
    magma_int_t *n, magma_int_t *nrhs,
    magmaFloatComplex *A, magma_int_t *lda,
    magma_int_t *ipiv,
    magmaFloatComplex *B, magma_int_t *ldb,
    magma_int_t *info )
{
    magma_cgesv(
        *n, *nrhs,
        A, *lda,
        ipiv,
        B, *ldb,
        info );
}

#define magmaf_cgetrf MAGMA_FORTRAN_NAME( cgetrf, CGETRF )
void magmaf_cgetrf(
    magma_int_t *m, magma_int_t *n,
    magmaFloatComplex *A, magma_int_t *lda,
    magma_int_t *ipiv,
    magma_int_t *info )
{
    magma_cgetrf(
        *m, *n,
        A, *lda,
        ipiv,
        info );
}

#define magmaf_cposv MAGMA_FORTRAN_NAME( cposv, CPOSV )
void magmaf_cposv(
    char *uplo, magma_int_t *n, magma_int_t *nrhs,
    magmaFloatComplex *A, magma_int_t *lda,
    magmaFloatComplex *B, magma_int_t *ldb,
    magma_int_t *info )
{
    magma_cposv(
        *uplo, *n, *nrhs,
        A, *lda,
        B, *ldb,
        info );
}

#define magmaf_cpotrf MAGMA_FORTRAN_NAME( cpotrf, CPOTRF )
void magmaf_cpotrf(
    char *uplo, magma_int_t *n,
    magmaFloatComplex *A, magma_int_t *lda,
    magma_int_t *info )
{
    magma_cpotrf(
        *uplo, *n,
        A, *lda,
        info );
}

#define magmaf_cpotri MAGMA_FORTRAN_NAME( cpotri, CPOTRI )
void magmaf_cpotri(
    char *uplo, magma_int_t *n,
    magmaFloatComplex *A, magma_int_t *lda,
    magma_int_t *info )
{
    magma_cpotri(
        *uplo, *n,
        A, *lda,
        info );
}

#define magmaf_clauum MAGMA_FORTRAN_NAME( clauum, CLAUUM )
void magmaf_clauum(
    char *uplo, magma_int_t *n,
    magmaFloatComplex *A, magma_int_t *lda,
    magma_int_t *info )
{
    magma_clauum(
        *uplo, *n,
        A, *lda,
        info );
}

#define magmaf_ctrtri MAGMA_FORTRAN_NAME( ctrtri, CTRTRI )
void magmaf_ctrtri(
    char *uplo, char *diag, magma_int_t *n,
    magmaFloatComplex *A, magma_int_t *lda,
    magma_int_t *info )
{
    magma_ctrtri(
        *uplo, *diag, *n,
        A, *lda,
        info );
}

#define magmaf_chetrd MAGMA_FORTRAN_NAME( chetrd, CHETRD )
void magmaf_chetrd(
    char *uplo, magma_int_t *n,
    magmaFloatComplex *A, magma_int_t *lda,
    float *d,
    float *e,
    magmaFloatComplex *tau,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_chetrd(
        *uplo, *n,
        A, *lda,
        d,
        e,
        tau,
        work, *lwork,
        info );
}

#define magmaf_cungqr MAGMA_FORTRAN_NAME( cungqr, CUNGQR )
void magmaf_cungqr(
    magma_int_t *m, magma_int_t *n, magma_int_t *k,
    magmaFloatComplex *a, magma_int_t *lda,
    magmaFloatComplex *tau,
    devptr_t *dT, magma_int_t *nb,
    magma_int_t *info )
{
    magma_cungqr(
        *m, *n, *k,
        a, *lda,
        tau,
        DEVPTR(dT), *nb,
        info );
}

#define magmaf_cunmql MAGMA_FORTRAN_NAME( cunmql, CUNMQL )
void magmaf_cunmql(
    char *side, char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    magmaFloatComplex *a, magma_int_t *lda,
    magmaFloatComplex *tau,
    magmaFloatComplex *c, magma_int_t *ldc,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_cunmql(
        *side, *trans, *m, *n, *k,
        a, *lda,
        tau,
        c, *ldc,
        work, *lwork,
        info );
}

#define magmaf_cunmqr MAGMA_FORTRAN_NAME( cunmqr, CUNMQR )
void magmaf_cunmqr(
    char *side, char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    magmaFloatComplex *a, magma_int_t *lda,
    magmaFloatComplex *tau,
    magmaFloatComplex *c, magma_int_t *ldc,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_cunmqr(
        *side, *trans, *m, *n, *k,
        a, *lda,
        tau,
        c, *ldc,
        work, *lwork,
        info );
}

#define magmaf_cunmtr MAGMA_FORTRAN_NAME( cunmtr, CUNMTR )
void magmaf_cunmtr(
    char *side, char *uplo, char *trans, magma_int_t *m, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    magmaFloatComplex *tau,
    magmaFloatComplex *c, magma_int_t *ldc,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_cunmtr(
        *side, *uplo, *trans, *m, *n,
        a, *lda,
        tau,
        c, *ldc,
        work, *lwork,
        info );
}

#define magmaf_cunghr MAGMA_FORTRAN_NAME( cunghr, CUNGHR )
void magmaf_cunghr(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    magmaFloatComplex *a, magma_int_t *lda,
    magmaFloatComplex *tau,
    devptr_t *dT, magma_int_t *nb,
    magma_int_t *info )
{
    magma_cunghr(
        *n, *ilo, *ihi,
        a, *lda,
        tau,
        DEVPTR(dT), *nb,
        info );
}

#if defined(PRECISION_z) || defined(PRECISION_c)

#define magmaf_cgeev MAGMA_FORTRAN_NAME( cgeev, CGEEV )
void magmaf_cgeev(
    char *jobvl, char *jobvr, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    magmaFloatComplex *w,
    magmaFloatComplex *vl, magma_int_t *ldvl,
    magmaFloatComplex *vr, magma_int_t *ldvr,
    magmaFloatComplex *work, magma_int_t *lwork,
    float *rwork,
    magma_int_t *info )
{
    magma_cgeev(
        *jobvl, *jobvr, *n,
        a, *lda,
        w,
        vl, *ldvl,
        vr, *ldvr,
        work, *lwork,
        rwork,
        info );
}

#define magmaf_cgeqp3 MAGMA_FORTRAN_NAME( cgeqp3, CGEQP3 )
void magmaf_cgeqp3(
    magma_int_t *m, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    magma_int_t *jpvt,
    magmaFloatComplex *tau,
    magmaFloatComplex *work, magma_int_t *lwork,
    float *rwork,
    magma_int_t *info )
{
    magma_cgeqp3(
        *m, *n,
        a, *lda,
        jpvt,
        tau,
        work, *lwork,
        rwork,
        info );
}

#define magmaf_cgesvd MAGMA_FORTRAN_NAME( cgesvd, CGESVD )
void magmaf_cgesvd(
    char *jobu, char *jobvt, magma_int_t *m, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    float *s,
    magmaFloatComplex *u, magma_int_t *ldu,
    magmaFloatComplex *vt, magma_int_t *ldvt,
    magmaFloatComplex *work, magma_int_t *lwork,
    float *rwork,
    magma_int_t *info )
{
    magma_cgesvd(
        *jobu, *jobvt, *m, *n,
        a, *lda,
        s,
        u, *ldu,
        vt, *ldvt,
        work, *lwork,
        rwork,
        info );
}

#define magmaf_cheevd MAGMA_FORTRAN_NAME( cheevd, CHEEVD )
void magmaf_cheevd(
    char *jobz, char *uplo, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    float *w,
    magmaFloatComplex *work, magma_int_t *lwork,
    float *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_cheevd(
        *jobz, *uplo, *n,
        a, *lda,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_cheevdx MAGMA_FORTRAN_NAME( cheevdx, CHEEVDX )
void magmaf_cheevdx(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda, float *vl, float *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    float *w,
    magmaFloatComplex *work, magma_int_t *lwork,
    float *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_cheevdx(
        *jobz, *range, *uplo, *n,
        a, *lda, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_cheevx MAGMA_FORTRAN_NAME( cheevx, CHEEVX )
void magmaf_cheevx(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda, float *vl, float *vu, magma_int_t *il, magma_int_t *iu, float *abstol,
    magma_int_t *m,
    float *w,
    magmaFloatComplex *z, magma_int_t *ldz,
    magmaFloatComplex *work, magma_int_t *lwork,
    float *rwork,
    magma_int_t *iwork,
    magma_int_t *ifail,
    magma_int_t *info )
{
    magma_cheevx(
        *jobz, *range, *uplo, *n,
        a, *lda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        z, *ldz,
        work, *lwork,
        rwork,
        iwork,
        ifail,
        info );
}

#define magmaf_cheevr MAGMA_FORTRAN_NAME( cheevr, CHEEVR )
void magmaf_cheevr(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda, float *vl, float *vu, magma_int_t *il, magma_int_t *iu, float *abstol,
    magma_int_t *m,
    float *w,
    magmaFloatComplex *z, magma_int_t *ldz,
    magma_int_t *isuppz,
    magmaFloatComplex *work, magma_int_t *lwork,
    float *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_cheevr(
        *jobz, *range, *uplo, *n,
        a, *lda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        z, *ldz,
        isuppz,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_chegvd MAGMA_FORTRAN_NAME( chegvd, CHEGVD )
void magmaf_chegvd(
    magma_int_t *itype, char *jobz, char *uplo, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    magmaFloatComplex *b, magma_int_t *ldb,
    float *w,
    magmaFloatComplex *work, magma_int_t *lwork,
    float *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_chegvd(
        *itype, *jobz, *uplo, *n,
        a, *lda,
        b, *ldb,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_chegvdx MAGMA_FORTRAN_NAME( chegvdx, CHEGVDX )
void magmaf_chegvdx(
    magma_int_t *itype, char *jobz, char *range, char *uplo, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    magmaFloatComplex *b, magma_int_t *ldb, float *vl, float *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    float *w,
    magmaFloatComplex *work, magma_int_t *lwork,
    float *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_chegvdx(
        *itype, *jobz, *range, *uplo, *n,
        a, *lda,
        b, *ldb, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_chegvx MAGMA_FORTRAN_NAME( chegvx, CHEGVX )
void magmaf_chegvx(
    magma_int_t *itype, char *jobz, char *range, char *uplo, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    magmaFloatComplex *b, magma_int_t *ldb, float *vl, float *vu, magma_int_t *il, magma_int_t *iu, float *abstol,
    magma_int_t *m,
    float *w,
    magmaFloatComplex *z, magma_int_t *ldz,
    magmaFloatComplex *work, magma_int_t *lwork,
    float *rwork,
    magma_int_t *iwork,
    magma_int_t *ifail,
    magma_int_t *info )
{
    magma_chegvx(
        *itype, *jobz, *range, *uplo, *n,
        a, *lda,
        b, *ldb, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        z, *ldz,
        work, *lwork,
        rwork,
        iwork,
        ifail,
        info );
}

#define magmaf_chegvr MAGMA_FORTRAN_NAME( chegvr, CHEGVR )
void magmaf_chegvr(
    magma_int_t *itype, char *jobz, char *range, char *uplo, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    magmaFloatComplex *b, magma_int_t *ldb, float *vl, float *vu, magma_int_t *il, magma_int_t *iu, float *abstol,
    magma_int_t *m,
    float *w,
    magmaFloatComplex *z, magma_int_t *ldz,
    magma_int_t *isuppz,
    magmaFloatComplex *work, magma_int_t *lwork,
    float *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_chegvr(
        *itype, *jobz, *range, *uplo, *n,
        a, *lda,
        b, *ldb, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        z, *ldz,
        isuppz,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_cstedx MAGMA_FORTRAN_NAME( cstedx, CSTEDX )
void magmaf_cstedx(
    char *range, magma_int_t *n, float *vl, float *vu, magma_int_t *il, magma_int_t *iu,
    float *D,
    float *E,
    magmaFloatComplex *Z, magma_int_t *ldz,
    float *rwork, magma_int_t *ldrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    float *dwork,
    magma_int_t *info )
{
    magma_cstedx(
        *range, *n, *vl, *vu, *il, *iu,
        D,
        E,
        Z, *ldz,
        rwork, *ldrwork,
        iwork, *liwork,
        dwork,
        info );
}

#else /* not (defined(PRECISION_z) || defined(PRECISION_c)) */

#define magmaf_cgeev MAGMA_FORTRAN_NAME( cgeev, CGEEV )
void magmaf_cgeev(
    char *jobvl, char *jobvr, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    magmaFloatComplex *wr,
    magmaFloatComplex *wi,
    magmaFloatComplex *vl, magma_int_t *ldvl,
    magmaFloatComplex *vr, magma_int_t *ldvr,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_cgeev(
        *jobvl, *jobvr, *n,
        a, *lda,
        wr,
        wi,
        vl, *ldvl,
        vr, *ldvr,
        work, *lwork,
        info );
}

#define magmaf_cgeqp3 MAGMA_FORTRAN_NAME( cgeqp3, CGEQP3 )
void magmaf_cgeqp3(
    magma_int_t *m, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    magma_int_t *jpvt,
    magmaFloatComplex *tau,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_cgeqp3(
        *m, *n,
        a, *lda,
        jpvt,
        tau,
        work, *lwork,
        info );
}

#define magmaf_cgesvd MAGMA_FORTRAN_NAME( cgesvd, CGESVD )
void magmaf_cgesvd(
    char *jobu, char *jobvt, magma_int_t *m, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    float *s,
    magmaFloatComplex *u, magma_int_t *ldu,
    magmaFloatComplex *vt, magma_int_t *ldvt,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_cgesvd(
        *jobu, *jobvt, *m, *n,
        a, *lda,
        s,
        u, *ldu,
        vt, *ldvt,
        work, *lwork,
        info );
}

#define magmaf_cheevd MAGMA_FORTRAN_NAME( cheevd, CHEEVD )
void magmaf_cheevd(
    char *jobz, char *uplo, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    float *w,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_cheevd(
        *jobz, *uplo, *n,
        a, *lda,
        w,
        work, *lwork,
        iwork, *liwork,
        info );
}

#define magmaf_cheevdx MAGMA_FORTRAN_NAME( cheevdx, CHEEVDX )
void magmaf_cheevdx(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda, float *vl, float *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    float *w,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_cheevdx(
        *jobz, *range, *uplo, *n,
        a, *lda, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        iwork, *liwork,
        info );
}

#define magmaf_chegvd MAGMA_FORTRAN_NAME( chegvd, CHEGVD )
void magmaf_chegvd(
    magma_int_t *itype, char *jobz, char *uplo, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    magmaFloatComplex *b, magma_int_t *ldb,
    float *w,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_chegvd(
        *itype, *jobz, *uplo, *n,
        a, *lda,
        b, *ldb,
        w,
        work, *lwork,
        iwork, *liwork,
        info );
}

#define magmaf_chegvdx MAGMA_FORTRAN_NAME( chegvdx, CHEGVDX )
void magmaf_chegvdx(
    magma_int_t *itype, char *jobz, char *range, char *uplo, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    magmaFloatComplex *b, magma_int_t *ldb, float *vl, float *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    float *w,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_chegvdx(
        *itype, *jobz, *range, *uplo, *n,
        a, *lda,
        b, *ldb, *vl, *vu, *il, *iu,
        m,
        w,
        work, *lwork,
        iwork, *liwork,
        info );
}

#define magmaf_cstedx MAGMA_FORTRAN_NAME( cstedx, CSTEDX )
void magmaf_cstedx(
    char *range, magma_int_t *n, float *vl, float *vu, magma_int_t *il, magma_int_t *iu,
    float *d,
    float *e,
    float *z, magma_int_t *ldz,
    float *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    float *dwork,
    magma_int_t *info )
{
    magma_cstedx(
        *range, *n, *vl, *vu, *il, *iu,
        d,
        e,
        z, *ldz,
        work, *lwork,
        iwork, *liwork,
        dwork,
        info );
}

#endif /* not (defined(PRECISION_z) || defined(PRECISION_c)) */

#define magmaf_chegst MAGMA_FORTRAN_NAME( chegst, CHEGST )
void magmaf_chegst(
    magma_int_t *itype, char *uplo, magma_int_t *n,
    magmaFloatComplex *a, magma_int_t *lda,
    magmaFloatComplex *b, magma_int_t *ldb,
    magma_int_t *info )
{
    magma_chegst(
        *itype, *uplo, *n,
        a, *lda,
        b, *ldb,
        info );
}

/* ////////////////////////////////////////////////////////////////////////////
 -- MAGMA function definitions / Data on CPU / Multi-GPU
*/
#if defined(PRECISION_z) || defined(PRECISION_c)
#define magmaf_cgeev_m MAGMA_FORTRAN_NAME( cgeev_m, CGEEV_M )
void magmaf_cgeev_m(
    char *jobvl, char *jobvr, magma_int_t *n,
    magmaFloatComplex *A, magma_int_t *lda,
    magmaFloatComplex *W,
    magmaFloatComplex *vl, magma_int_t *ldvl,
    magmaFloatComplex *vr, magma_int_t *ldvr,
    magmaFloatComplex *work, magma_int_t *lwork,
    float *rwork,
    magma_int_t *info )
{
    magma_cgeev_m(
        *jobvl, *jobvr, *n,
        A, *lda,
        W,
        vl, *ldvl,
        vr, *ldvr,
        work, *lwork,
        rwork,
        info );
}

#else
#define magmaf_cgeev_m MAGMA_FORTRAN_NAME( cgeev_m, CGEEV_M )
void magmaf_cgeev_m(
    char *jobvl, char *jobvr, magma_int_t *n,
    magmaFloatComplex *A, magma_int_t *lda,
    float *WR,
    float *WI,
    magmaFloatComplex *vl, magma_int_t *ldvl,
    magmaFloatComplex *vr, magma_int_t *ldvr,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_cgeev_m(
        *jobvl, *jobvr, *n,
        A, *lda,
        WR,
        WI,
        vl, *ldvl,
        vr, *ldvr,
        work, *lwork,
        info );
}

#endif

#define magmaf_cgehrd_m MAGMA_FORTRAN_NAME( cgehrd_m, CGEHRD_M )
void magmaf_cgehrd_m(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    magmaFloatComplex *A, magma_int_t *lda,
    magmaFloatComplex *tau,
    magmaFloatComplex *work, magma_int_t *lwork,
    magmaFloatComplex *T,
    magma_int_t *info )
{
    magma_cgehrd_m(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        work, *lwork,
        T,
        info );
}

#define magmaf_cunghr_m MAGMA_FORTRAN_NAME( cunghr_m, CUNGHR_M )
void magmaf_cunghr_m(
    magma_int_t *n, magma_int_t *ilo, magma_int_t *ihi,
    magmaFloatComplex *A, magma_int_t *lda,
    magmaFloatComplex *tau,
    magmaFloatComplex *T, magma_int_t *nb,
    magma_int_t *info )
{
    magma_cunghr_m(
        *n, *ilo, *ihi,
        A, *lda,
        tau,
        T, *nb,
        info );
}

#define magmaf_cungqr_m MAGMA_FORTRAN_NAME( cungqr_m, CUNGQR_M )
void magmaf_cungqr_m(
    magma_int_t *m, magma_int_t *n, magma_int_t *k,
    magmaFloatComplex *A, magma_int_t *lda,
    magmaFloatComplex *tau,
    magmaFloatComplex *T, magma_int_t *nb,
    magma_int_t *info )
{
    magma_cungqr_m(
        *m, *n, *k,
        A, *lda,
        tau,
        T, *nb,
        info );
}

/* ////////////////////////////////////////////////////////////////////////////
 -- MAGMA function definitions / Data on GPU
*/
#define magmaf_cgels_gpu MAGMA_GPU_FORTRAN_NAME( cgels, CGELS )
void magmaf_cgels_gpu(
    char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    devptr_t *dB, magma_int_t *lddb,
    magmaFloatComplex *hwork, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_cgels_gpu(
        *trans, *m, *n, *nrhs,
        DEVPTR(dA), *ldda,
        DEVPTR(dB), *lddb,
        hwork, *lwork,
        info );
}

#define magmaf_cgels3_gpu MAGMA_GPU_FORTRAN_NAME( cgels3, CGELS3 )
void magmaf_cgels3_gpu(
    char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    devptr_t *dB, magma_int_t *lddb,
    magmaFloatComplex *hwork, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_cgels3_gpu(
        *trans, *m, *n, *nrhs,
        DEVPTR(dA), *ldda,
        DEVPTR(dB), *lddb,
        hwork, *lwork,
        info );
}

#define magmaf_cgelqf_gpu MAGMA_GPU_FORTRAN_NAME( cgelqf, CGELQF )
void magmaf_cgelqf_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magmaFloatComplex *tau,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_cgelqf_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        tau,
        work, *lwork,
        info );
}

#define magmaf_cgeqrf_gpu MAGMA_GPU_FORTRAN_NAME( cgeqrf, CGEQRF )
void magmaf_cgeqrf_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magmaFloatComplex *tau,
    devptr_t *dT,
    magma_int_t *info )
{
    magma_cgeqrf_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        tau,
        DEVPTR(dT),
        info );
}

#define magmaf_cgeqrf2_gpu MAGMA_GPU_FORTRAN_NAME( cgeqrf2, CGEQRF2 )
void magmaf_cgeqrf2_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magmaFloatComplex *tau,
    magma_int_t *info )
{
    magma_cgeqrf2_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        tau,
        info );
}

#define magmaf_cgeqrf3_gpu MAGMA_GPU_FORTRAN_NAME( cgeqrf3, CGEQRF3 )
void magmaf_cgeqrf3_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magmaFloatComplex *tau,
    devptr_t *dT,
    magma_int_t *info )
{
    magma_cgeqrf3_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        tau,
        DEVPTR(dT),
        info );
}

#define magmaf_cgeqrs_gpu MAGMA_GPU_FORTRAN_NAME( cgeqrs, CGEQRS )
void magmaf_cgeqrs_gpu(
    magma_int_t *m, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    magmaFloatComplex *tau,
    devptr_t *dT,
    devptr_t *dB, magma_int_t *lddb,
    magmaFloatComplex *hwork, magma_int_t *lhwork,
    magma_int_t *info )
{
    magma_cgeqrs_gpu(
        *m, *n, *nrhs,
        DEVPTR(dA), *ldda,
        tau,
        DEVPTR(dT),
        DEVPTR(dB), *lddb,
        hwork, *lhwork,
        info );
}

#define magmaf_cgeqrs3_gpu MAGMA_GPU_FORTRAN_NAME( cgeqrs3, CGEQRS3 )
void magmaf_cgeqrs3_gpu(
    magma_int_t *m, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    magmaFloatComplex *tau,
    devptr_t *dT,
    devptr_t *dB, magma_int_t *lddb,
    magmaFloatComplex *hwork, magma_int_t *lhwork,
    magma_int_t *info )
{
    magma_cgeqrs3_gpu(
        *m, *n, *nrhs,
        DEVPTR(dA), *ldda,
        tau,
        DEVPTR(dT),
        DEVPTR(dB), *lddb,
        hwork, *lhwork,
        info );
}

#define magmaf_cgessm_gpu MAGMA_GPU_FORTRAN_NAME( cgessm, CGESSM )
void magmaf_cgessm_gpu(
    char *storev, magma_int_t *m, magma_int_t *n, magma_int_t *k, magma_int_t *ib,
    magma_int_t *ipiv,
    devptr_t *dL1, magma_int_t *lddl1,
    devptr_t *dL, magma_int_t *lddl,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_cgessm_gpu(
        *storev, *m, *n, *k, *ib,
        ipiv,
        DEVPTR(dL1), *lddl1,
        DEVPTR(dL), *lddl,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_cgesv_gpu MAGMA_GPU_FORTRAN_NAME( cgesv, CGESV )
void magmaf_cgesv_gpu(
    magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *ipiv,
    devptr_t *dB, magma_int_t *lddb,
    magma_int_t *info )
{
    magma_cgesv_gpu(
        *n, *nrhs,
        DEVPTR(dA), *ldda,
        ipiv,
        DEVPTR(dB), *lddb,
        info );
}

#define magmaf_cgetrf_gpu MAGMA_GPU_FORTRAN_NAME( cgetrf, CGETRF )
void magmaf_cgetrf_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *ipiv,
    magma_int_t *info )
{
    magma_cgetrf_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        ipiv,
        info );
}

#define magmaf_cgetrf_nopiv_gpu MAGMA_GPU_FORTRAN_NAME( cgetrf_nopiv, CGETRF_NOPIV )
void magmaf_cgetrf_nopiv_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_cgetrf_nopiv_gpu(
        *m, *n,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_cgetri_gpu MAGMA_GPU_FORTRAN_NAME( cgetri, CGETRI )
void magmaf_cgetri_gpu(
    magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *ipiv,
    devptr_t *dwork, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_cgetri_gpu(
        *n,
        DEVPTR(dA), *ldda,
        ipiv,
        DEVPTR(dwork), *lwork,
        info );
}

#define magmaf_cgetrs_gpu MAGMA_GPU_FORTRAN_NAME( cgetrs, CGETRS )
void magmaf_cgetrs_gpu(
    char *trans, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *ipiv,
    devptr_t *dB, magma_int_t *lddb,
    magma_int_t *info )
{
    magma_cgetrs_gpu(
        *trans, *n, *nrhs,
        DEVPTR(dA), *ldda,
        ipiv,
        DEVPTR(dB), *lddb,
        info );
}

#define magmaf_clarfb_gpu MAGMA_GPU_FORTRAN_NAME( clarfb, CLARFB )
void magmaf_clarfb_gpu(
    char *side, char *trans, char *direct, char *storev, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    devptr_t *dv, magma_int_t *ldv,
    devptr_t *dt, magma_int_t *ldt,
    devptr_t *dc, magma_int_t *ldc,
    devptr_t *dwork, magma_int_t *ldwork )
{
    magma_clarfb_gpu(
        *side, *trans, *direct, *storev, *m, *n, *k,
        DEVPTR(dv), *ldv,
        DEVPTR(dt), *ldt,
        DEVPTR(dc), *ldc,
        DEVPTR(dwork), *ldwork );
}

#define magmaf_clarfb_gpu_gemm MAGMA_FORTRAN_NAME( clarfb_gpu_gemm, CLARFB_GPU_GEMM )
void magmaf_clarfb_gpu_gemm(
    char *side, char *trans, char *direct, char *storev, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    const magmaFloatComplex *dv, magma_int_t *ldv,
    const magmaFloatComplex *dt, magma_int_t *ldt,
    magmaFloatComplex *dc, magma_int_t *ldc,
    magmaFloatComplex *dwork, magma_int_t *ldwork,
    magmaFloatComplex *dworkvt, magma_int_t *ldworkvt )
{
    magma_clarfb_gpu_gemm(
        *side, *trans, *direct, *storev, *m, *n, *k,
        dv, *ldv,
        dt, *ldt,
        dc, *ldc,
        dwork, *ldwork,
        dworkvt, *ldworkvt );
}

#define magmaf_cposv_gpu MAGMA_GPU_FORTRAN_NAME( cposv, CPOSV )
void magmaf_cposv_gpu(
    char *uplo, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    devptr_t *dB, magma_int_t *lddb,
    magma_int_t *info )
{
    magma_cposv_gpu(
        *uplo, *n, *nrhs,
        DEVPTR(dA), *ldda,
        DEVPTR(dB), *lddb,
        info );
}

#define magmaf_cpotrf_gpu MAGMA_GPU_FORTRAN_NAME( cpotrf, CPOTRF )
void magmaf_cpotrf_gpu(
    char *uplo, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_cpotrf_gpu(
        *uplo, *n,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_cpotri_gpu MAGMA_GPU_FORTRAN_NAME( cpotri, CPOTRI )
void magmaf_cpotri_gpu(
    char *uplo, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_cpotri_gpu(
        *uplo, *n,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_clauum_gpu MAGMA_GPU_FORTRAN_NAME( clauum, CLAUUM )
void magmaf_clauum_gpu(
    char *uplo, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_clauum_gpu(
        *uplo, *n,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_ctrtri_gpu MAGMA_GPU_FORTRAN_NAME( ctrtri, CTRTRI )
void magmaf_ctrtri_gpu(
    char *uplo, char *diag, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda,
    magma_int_t *info )
{
    magma_ctrtri_gpu(
        *uplo, *diag, *n,
        DEVPTR(dA), *ldda,
        info );
}

#define magmaf_chetrd_gpu MAGMA_GPU_FORTRAN_NAME( chetrd, CHETRD )
void magmaf_chetrd_gpu(
    char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    float *d,
    float *e,
    magmaFloatComplex *tau,
    magmaFloatComplex *wa, magma_int_t *ldwa,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *info )
{
    magma_chetrd_gpu(
        *uplo, *n,
        DEVPTR(da), *ldda,
        d,
        e,
        tau,
        wa, *ldwa,
        work, *lwork,
        info );
}

#define magmaf_chetrd2_gpu MAGMA_GPU_FORTRAN_NAME( chetrd2, CHETRD2 )
void magmaf_chetrd2_gpu(
    char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    float *d,
    float *e,
    magmaFloatComplex *tau,
    magmaFloatComplex *wa, magma_int_t *ldwa,
    magmaFloatComplex *work, magma_int_t *lwork,
    magmaFloatComplex *dwork, magma_int_t *ldwork,
    magma_int_t *info )
{
    magma_chetrd2_gpu(
        *uplo, *n,
        DEVPTR(da), *ldda,
        d,
        e,
        tau,
        wa, *ldwa,
        work, *lwork,
        dwork, *ldwork,
        info );
}

#define magmaf_cpotrs_gpu MAGMA_GPU_FORTRAN_NAME( cpotrs, CPOTRS )
void magmaf_cpotrs_gpu(
    char *uplo, magma_int_t *n, magma_int_t *nrhs,
    devptr_t *dA, magma_int_t *ldda,
    devptr_t *dB, magma_int_t *lddb,
    magma_int_t *info )
{
    magma_cpotrs_gpu(
        *uplo, *n, *nrhs,
        DEVPTR(dA), *ldda,
        DEVPTR(dB), *lddb,
        info );
}

#define magmaf_cssssm_gpu MAGMA_GPU_FORTRAN_NAME( cssssm, CSSSSM )
void magmaf_cssssm_gpu(
    char *storev, magma_int_t *m1, magma_int_t *n1, magma_int_t *m2, magma_int_t *n2, magma_int_t *k, magma_int_t *ib,
    devptr_t *dA1, magma_int_t *ldda1,
    devptr_t *dA2, magma_int_t *ldda2,
    devptr_t *dL1, magma_int_t *lddl1,
    devptr_t *dL2, magma_int_t *lddl2,
    magma_int_t *IPIV,
    magma_int_t *info )
{
    magma_cssssm_gpu(
        *storev, *m1, *n1, *m2, *n2, *k, *ib,
        DEVPTR(dA1), *ldda1,
        DEVPTR(dA2), *ldda2,
        DEVPTR(dL1), *lddl1,
        DEVPTR(dL2), *lddl2,
        IPIV,
        info );
}

#define magmaf_cungqr_gpu MAGMA_GPU_FORTRAN_NAME( cungqr, CUNGQR )
void magmaf_cungqr_gpu(
    magma_int_t *m, magma_int_t *n, magma_int_t *k,
    devptr_t *da, magma_int_t *ldda,
    magmaFloatComplex *tau,
    devptr_t *dwork, magma_int_t *nb,
    magma_int_t *info )
{
    magma_cungqr_gpu(
        *m, *n, *k,
        DEVPTR(da), *ldda,
        tau,
        DEVPTR(dwork), *nb,
        info );
}

#define magmaf_cunmql2_gpu MAGMA_GPU_FORTRAN_NAME( cunmql2, CUNMQL2 )
void magmaf_cunmql2_gpu(
    char *side, char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    devptr_t *da, magma_int_t *ldda,
    magmaFloatComplex *tau,
    devptr_t *dc, magma_int_t *lddc,
    magmaFloatComplex *wa, magma_int_t *ldwa,
    magma_int_t *info )
{
    magma_cunmql2_gpu(
        *side, *trans, *m, *n, *k,
        DEVPTR(da), *ldda,
        tau,
        DEVPTR(dc), *lddc,
        wa, *ldwa,
        info );
}

#define magmaf_cunmqr_gpu MAGMA_GPU_FORTRAN_NAME( cunmqr, CUNMQR )
void magmaf_cunmqr_gpu(
    char *side, char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    devptr_t *dA, magma_int_t *ldda,
    magmaFloatComplex *tau,
    devptr_t *dC, magma_int_t *lddc,
    magmaFloatComplex *hwork, magma_int_t *lwork,
    devptr_t *dT, magma_int_t *nb,
    magma_int_t *info )
{
    magma_cunmqr_gpu(
        *side, *trans, *m, *n, *k,
        DEVPTR(dA), *ldda,
        tau,
        DEVPTR(dC), *lddc,
        hwork, *lwork,
        DEVPTR(dT), *nb,
        info );
}

#define magmaf_cunmqr2_gpu MAGMA_GPU_FORTRAN_NAME( cunmqr2, CUNMQR2 )
void magmaf_cunmqr2_gpu(
    char *side, char *trans, magma_int_t *m, magma_int_t *n, magma_int_t *k,
    devptr_t *da, magma_int_t *ldda,
    magmaFloatComplex *tau,
    devptr_t *dc, magma_int_t *lddc,
    magmaFloatComplex *wa, magma_int_t *ldwa,
    magma_int_t *info )
{
    magma_cunmqr2_gpu(
        *side, *trans, *m, *n, *k,
        DEVPTR(da), *ldda,
        tau,
        DEVPTR(dc), *lddc,
        wa, *ldwa,
        info );
}

#define magmaf_cunmtr_gpu MAGMA_GPU_FORTRAN_NAME( cunmtr, CUNMTR )
void magmaf_cunmtr_gpu(
    char *side, char *uplo, char *trans, magma_int_t *m, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    magmaFloatComplex *tau,
    devptr_t *dc, magma_int_t *lddc,
    magmaFloatComplex *wa, magma_int_t *ldwa,
    magma_int_t *info )
{
    magma_cunmtr_gpu(
        *side, *uplo, *trans, *m, *n,
        DEVPTR(da), *ldda,
        tau,
        DEVPTR(dc), *lddc,
        wa, *ldwa,
        info );
}

#if defined(PRECISION_z) || defined(PRECISION_c)
#define magmaf_cheevd_gpu MAGMA_GPU_FORTRAN_NAME( cheevd, CHEEVD )
void magmaf_cheevd_gpu(
    char *jobz, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    float *w,
    magmaFloatComplex *wa, magma_int_t *ldwa,
    magmaFloatComplex *work, magma_int_t *lwork,
    float *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_cheevd_gpu(
        *jobz, *uplo, *n,
        DEVPTR(da), *ldda,
        w,
        wa, *ldwa,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_cheevdx_gpu MAGMA_GPU_FORTRAN_NAME( cheevdx, CHEEVDX )
void magmaf_cheevdx_gpu(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda, float *vl, float *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    float *w,
    magmaFloatComplex *wa, magma_int_t *ldwa,
    magmaFloatComplex *work, magma_int_t *lwork,
    float *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_cheevdx_gpu(
        *jobz, *range, *uplo, *n,
        DEVPTR(da), *ldda, *vl, *vu, *il, *iu,
        m,
        w,
        wa, *ldwa,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#define magmaf_cheevx_gpu MAGMA_GPU_FORTRAN_NAME( cheevx, CHEEVX )
void magmaf_cheevx_gpu(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda, float *vl, float *vu, magma_int_t *il, magma_int_t *iu, float *abstol,
    magma_int_t *m,
    float *w,
    devptr_t *dz, magma_int_t *lddz,
    magmaFloatComplex *wa, magma_int_t *ldwa,
    magmaFloatComplex *wz, magma_int_t *ldwz,
    magmaFloatComplex *work, magma_int_t *lwork,
    float *rwork,
    magma_int_t *iwork,
    magma_int_t *ifail,
    magma_int_t *info )
{
    magma_cheevx_gpu(
        *jobz, *range, *uplo, *n,
        DEVPTR(da), *ldda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        DEVPTR(dz), *lddz,
        wa, *ldwa,
        wz, *ldwz,
        work, *lwork,
        rwork,
        iwork,
        ifail,
        info );
}

#define magmaf_cheevr_gpu MAGMA_GPU_FORTRAN_NAME( cheevr, CHEEVR )
void magmaf_cheevr_gpu(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda, float *vl, float *vu, magma_int_t *il, magma_int_t *iu, float *abstol,
    magma_int_t *m,
    float *w,
    devptr_t *dz, magma_int_t *lddz,
    magma_int_t *isuppz,
    magmaFloatComplex *wa, magma_int_t *ldwa,
    magmaFloatComplex *wz, magma_int_t *ldwz,
    magmaFloatComplex *work, magma_int_t *lwork,
    float *rwork, magma_int_t *lrwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_cheevr_gpu(
        *jobz, *range, *uplo, *n,
        DEVPTR(da), *ldda, *vl, *vu, *il, *iu, *abstol,
        m,
        w,
        DEVPTR(dz), *lddz,
        isuppz,
        wa, *ldwa,
        wz, *ldwz,
        work, *lwork,
        rwork, *lrwork,
        iwork, *liwork,
        info );
}

#else
#define magmaf_cheevd_gpu MAGMA_GPU_FORTRAN_NAME( cheevd, CHEEVD )
void magmaf_cheevd_gpu(
    char *jobz, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    magmaFloatComplex *w,
    magmaFloatComplex *wa, magma_int_t *ldwa,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_cheevd_gpu(
        *jobz, *uplo, *n,
        DEVPTR(da), *ldda,
        w,
        wa, *ldwa,
        work, *lwork,
        iwork, *liwork,
        info );
}

#define magmaf_cheevdx_gpu MAGMA_GPU_FORTRAN_NAME( cheevdx, CHEEVDX )
void magmaf_cheevdx_gpu(
    char *jobz, char *range, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda, float *vl, float *vu, magma_int_t *il, magma_int_t *iu,
    magma_int_t *m,
    float *w,
    magmaFloatComplex *wa, magma_int_t *ldwa,
    magmaFloatComplex *work, magma_int_t *lwork,
    magma_int_t *iwork, magma_int_t *liwork,
    magma_int_t *info )
{
    magma_cheevdx_gpu(
        *jobz, *range, *uplo, *n,
        DEVPTR(da), *ldda, *vl, *vu, *il, *iu,
        m,
        w,
        wa, *ldwa,
        work, *lwork,
        iwork, *liwork,
        info );
}

#endif

#define magmaf_chegst_gpu MAGMA_GPU_FORTRAN_NAME( chegst, CHEGST )
void magmaf_chegst_gpu(
    magma_int_t *itype, char *uplo, magma_int_t *n,
    devptr_t *da, magma_int_t *ldda,
    devptr_t *db, magma_int_t *lddb,
    magma_int_t *info )
{
    magma_chegst_gpu(
        *itype, *uplo, *n,
        DEVPTR(da), *ldda,
        DEVPTR(db), *lddb,
        info );
}

/* ////////////////////////////////////////////////////////////////////////////
 -- MAGMA utility function definitions
*/

#define magmaf_cprint MAGMA_FORTRAN_NAME( cprint, ZPRINT )
void magmaf_cprint(
    magma_int_t *m, magma_int_t *n,
    const magmaFloatComplex  *A, magma_int_t *lda )
{
    magma_cprint(
        *m, *n,
        A, *lda );
}

#define magmaf_cprint_gpu MAGMA_GPU_FORTRAN_NAME( cprint, ZPRINT )
void magmaf_cprint_gpu(
    magma_int_t *m, magma_int_t *n,
    devptr_t *dA, magma_int_t *ldda )
{
    magma_cprint_gpu(
        *m, *n,
        DEVPTR(dA), *ldda );
}


#ifdef __cplusplus
}
#endif
